Flat profile:

Each sample counts as 0.01 seconds.
 no time accumulated

  %   cumulative   self              self     total           
 time   seconds   seconds    calls  Ts/call  Ts/call  name    
  0.00      0.00     0.00 67116445     0.00     0.00  __gnu_cxx::__aligned_membuf<Rabbit*>::_M_ptr()
  0.00      0.00     0.00 67116445     0.00     0.00  __gnu_cxx::__aligned_membuf<Rabbit*>::_M_addr()
  0.00      0.00     0.00 67116445     0.00     0.00  std::_List_node<Rabbit*>::_M_valptr()
  0.00      0.00     0.00 59560135     0.00     0.00  std::_List_iterator<Rabbit*>::operator*() const
  0.00      0.00     0.00 57063659     0.00     0.00  std::_List_iterator<Rabbit*>::operator!=(std::_List_iterator<Rabbit*> const&) const
  0.00      0.00     0.00 56774915     0.00     0.00  std::_List_iterator<Rabbit*>::operator++()
  0.00      0.00     0.00 51484795     0.00     0.00  std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()()
  0.00      0.00     0.00 45281924     0.00     0.00  std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::min()
  0.00      0.00     0.00 44548068     0.00     0.00  std::uniform_real_distribution<double>::param_type::a() const
  0.00      0.00     0.00 22640962     0.00     0.00  std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::operator()()
  0.00      0.00     0.00 22640962     0.00     0.00  double std::generate_canonical<double, 53ul, std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)
  0.00      0.00     0.00 22562377     0.00     0.00  std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::_Adaptor(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)
  0.00      0.00     0.00 22274034     0.00     0.00  std::uniform_real_distribution<double>::param_type::b() const
  0.00      0.00     0.00 22274034     0.00     0.00  double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)
  0.00      0.00     0.00 22274034     0.00     0.00  double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_real_distribution<double>::param_type const&)
  0.00      0.00     0.00 19074565     0.00     0.00  Rabbit::hasMajority() const
  0.00      0.00     0.00 18497879     0.00     0.00  Rabbit::grow()
  0.00      0.00     0.00 18497879     0.00     0.00  Rabbit::hasToDie() const
  0.00      0.00     0.00 18497879     0.00     0.00  Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1}::operator()(Rabbit* const&) const
  0.00      0.00     0.00 18497879     0.00     0.00  Population::passTime(unsigned int)::{lambda(Rabbit*&)#2}::operator()(Rabbit*&) const
  0.00      0.00     0.00 15112620     0.00     0.00  Rabbit*&& std::forward<Rabbit*>(std::remove_reference<Rabbit*>::type&)
  0.00      0.00     0.00 12405742     0.00     0.00  std::uniform_int_distribution<int>::param_type::a() const
  0.00      0.00     0.00  9246447     0.00     0.00  FemaleRabbit::grow()
  0.00      0.00     0.00  7556310     0.00     0.00  std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_get_Node_allocator()
  0.00      0.00     0.00  6275033     0.00     0.00  __gnu_cxx::__aligned_membuf<unsigned long>::_M_ptr()
  0.00      0.00     0.00  6275033     0.00     0.00  __gnu_cxx::__aligned_membuf<unsigned long>::_M_addr()
  0.00      0.00     0.00  6275033     0.00     0.00  std::_List_node<unsigned long>::_M_valptr()
  0.00      0.00     0.00  6202871     0.00     0.00  std::uniform_int_distribution<int>::param_type::b() const
  0.00      0.00     0.00  6202871     0.00     0.00  int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)
  0.00      0.00     0.00  6202871     0.00     0.00  int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<int>::param_type const&)
  0.00      0.00     0.00  4355443     0.00     0.00  std::_List_iterator<Rabbit*>::_List_iterator(std::__detail::_List_node_base*)
  0.00      0.00     0.00  4066799     0.00     0.00  std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::end()
  0.00      0.00     0.00  3778155     0.00     0.00  Rabbit::Rabbit()
  0.00      0.00     0.00  3778155     0.00     0.00  Rabbit::~Rabbit()
  0.00      0.00     0.00  3778155     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<Rabbit*> >::deallocate(std::_List_node<Rabbit*>*, unsigned long)
  0.00      0.00     0.00  3778155     0.00     0.00  void __gnu_cxx::new_allocator<std::_List_node<Rabbit*> >::destroy<Rabbit*>(Rabbit**)
  0.00      0.00     0.00  3778155     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<Rabbit*> >::allocate(unsigned long, void const*)
  0.00      0.00     0.00  3778155     0.00     0.00  void __gnu_cxx::new_allocator<std::_List_node<Rabbit*> >::construct<Rabbit*, Rabbit*>(Rabbit**, Rabbit*&&)
  0.00      0.00     0.00  3778155     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<Rabbit*> >::max_size() const
  0.00      0.00     0.00  3778155     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<Rabbit*> > >::__allocated_ptr(std::allocator<std::_List_node<Rabbit*> >&, std::_List_node<Rabbit*>*)
  0.00      0.00     0.00  3778155     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<Rabbit*> > >::~__allocated_ptr()
  0.00      0.00     0.00  3778155     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<Rabbit*> > >::operator=(decltype(nullptr))
  0.00      0.00     0.00  3778155     0.00     0.00  std::allocator_traits<std::allocator<std::_List_node<Rabbit*> > >::deallocate(std::allocator<std::_List_node<Rabbit*> >&, std::_List_node<Rabbit*>*, unsigned long)
  0.00      0.00     0.00  3778155     0.00     0.00  void std::allocator_traits<std::allocator<std::_List_node<Rabbit*> > >::destroy<Rabbit*>(std::allocator<std::_List_node<Rabbit*> >&, Rabbit**)
  0.00      0.00     0.00  3778155     0.00     0.00  std::allocator_traits<std::allocator<std::_List_node<Rabbit*> > >::allocate(std::allocator<std::_List_node<Rabbit*> >&, unsigned long)
  0.00      0.00     0.00  3778155     0.00     0.00  void std::allocator_traits<std::allocator<std::_List_node<Rabbit*> > >::construct<Rabbit*, Rabbit*>(std::allocator<std::_List_node<Rabbit*> >&, Rabbit**, Rabbit*&&)
  0.00      0.00     0.00  3778155     0.00     0.00  std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_get_node()
  0.00      0.00     0.00  3778155     0.00     0.00  std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_inc_size(unsigned long)
  0.00      0.00     0.00  3778155     0.00     0.00  std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_put_node(std::_List_node<Rabbit*>*)
  0.00      0.00     0.00  3778155     0.00     0.00  std::_List_node<Rabbit*>* std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::_M_create_node<Rabbit*>(Rabbit*&&)
  0.00      0.00     0.00  3778155     0.00     0.00  void std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::_M_insert<Rabbit*>(std::_List_iterator<Rabbit*>, Rabbit*&&)
  0.00      0.00     0.00  3778155     0.00     0.00  std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::push_back(Rabbit*&&)
  0.00      0.00     0.00  3778155     0.00     0.00  std::allocator<std::_List_node<Rabbit*> >* std::__addressof<std::allocator<std::_List_node<Rabbit*> > >(std::allocator<std::_List_node<Rabbit*> >&)
  0.00      0.00     0.00  3778155     0.00     0.00  std::remove_reference<Rabbit*&>::type&& std::move<Rabbit*&>(Rabbit*&)
  0.00      0.00     0.00  3778155     0.00     0.00  operator new(unsigned long, void*)
  0.00      0.00     0.00  2566560     0.00     0.00  std::_List_const_iterator<Rabbit*>::operator!=(std::_List_const_iterator<Rabbit*> const&) const
  0.00      0.00     0.00  2566556     0.00     0.00  __gnu_cxx::__aligned_membuf<Rabbit*>::_M_ptr() const
  0.00      0.00     0.00  2566556     0.00     0.00  __gnu_cxx::__aligned_membuf<Rabbit*>::_M_addr() const
  0.00      0.00     0.00  2566556     0.00     0.00  std::_List_node<Rabbit*>::_M_valptr() const
  0.00      0.00     0.00  2566556     0.00     0.00  std::_List_const_iterator<Rabbit*>::operator*() const
  0.00      0.00     0.00  2566556     0.00     0.00  std::_List_const_iterator<Rabbit*>::operator++()
  0.00      0.00     0.00  2496877     0.00     0.00  Rabbit::getAge() const
  0.00      0.00     0.00  2496877     0.00     0.00  std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_dec_size(unsigned long)
  0.00      0.00     0.00  2496877     0.00     0.00  std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::_M_erase(std::_List_iterator<Rabbit*>)
  0.00      0.00     0.00  2496877     0.00     0.00  Rabbit* const* std::__addressof<Rabbit* const>(Rabbit* const&)
  0.00      0.00     0.00  2496877     0.00     0.00  Rabbit** std::__addressof<Rabbit*>(Rabbit*&)
  0.00      0.00     0.00  1889467     0.00     0.00  FemaleRabbit::FemaleRabbit(std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >&)
  0.00      0.00     0.00  1889467     0.00     0.00  FemaleRabbit::~FemaleRabbit()
  0.00      0.00     0.00  1889467     0.00     0.00  FemaleRabbit::~FemaleRabbit()
  0.00      0.00     0.00  1888688     0.00     0.00  Rabbit::~Rabbit()
  0.00      0.00     0.00  1283278     0.00     0.00  Population::getNumberOfMaleRabbit() const::{lambda(Rabbit*)#1}::operator()(Rabbit*) const
  0.00      0.00     0.00  1283278     0.00     0.00  Population::getNumberOfFemaleRabbit() const::{lambda(Rabbit*)#1}::operator()(Rabbit*) const
  0.00      0.00     0.00  1281278     0.00     0.00  Population::~Population()::{lambda(Rabbit*&)#1}::operator()(Rabbit*&) const
  0.00      0.00     0.00   576686     0.00     0.00  std::remove_reference<FemaleRabbit::grow()::{lambda(Rabbit*)#1}&>::type&& std::move<FemaleRabbit::grow()::{lambda(Rabbit*)#1}&>(std::remove_reference&&)
  0.00      0.00     0.00   288644     0.00     0.00  std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::begin()
  0.00      0.00     0.00   288343     0.00     0.00  __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>::_Iter_pred({lambda(Rabbit*)#1})
  0.00      0.00     0.00   288343     0.00     0.00  bool __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>::operator()<std::_List_iterator<Rabbit*> >(std::_List_iterator<Rabbit*>)
  0.00      0.00     0.00   288343     0.00     0.00  __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}> __gnu_cxx::__ops::__pred_iter<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>(__gnu_cxx::__ops::_Iter_pred)
  0.00      0.00     0.00   288343     0.00     0.00  std::_List_iterator<Rabbit*>::operator==(std::_List_iterator<Rabbit*> const&) const
  0.00      0.00     0.00   288343     0.00     0.00  std::normal_distribution<double>::param_type::mean() const
  0.00      0.00     0.00   288343     0.00     0.00  std::normal_distribution<double>::param_type::stddev() const
  0.00      0.00     0.00   288343     0.00     0.00  double std::normal_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)
  0.00      0.00     0.00   288343     0.00     0.00  double std::normal_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::normal_distribution<double>::param_type const&)
  0.00      0.00     0.00   288343     0.00     0.00  std::iterator_traits<std::_List_iterator<Rabbit*> >::iterator_category std::__iterator_category<std::_List_iterator<Rabbit*> >(std::_List_iterator<Rabbit*> const&)
  0.00      0.00     0.00   288343     0.00     0.00  bool std::any_of<std::_List_iterator<Rabbit*>, FemaleRabbit::grow()::{lambda(Rabbit*)#1}>(std::_List_iterator<Rabbit*>, FemaleRabbit::grow()::{lambda(Rabbit*)#1}, FemaleRabbit::grow()::{lambda(Rabbit*)#1})
  0.00      0.00     0.00   288343     0.00     0.00  std::_List_iterator<Rabbit*> std::find_if<std::_List_iterator<Rabbit*>, FemaleRabbit::grow()::{lambda(Rabbit*)#1}>(FemaleRabbit::grow()::{lambda(Rabbit*)#1}, FemaleRabbit::grow()::{lambda(Rabbit*)#1}, FemaleRabbit::grow()::{lambda(Rabbit*)#1})
  0.00      0.00     0.00   288343     0.00     0.00  bool std::none_of<std::_List_iterator<Rabbit*>, FemaleRabbit::grow()::{lambda(Rabbit*)#1}>(std::_List_iterator<Rabbit*>, FemaleRabbit::grow()::{lambda(Rabbit*)#1}, FemaleRabbit::grow()::{lambda(Rabbit*)#1})
  0.00      0.00     0.00   288343     0.00     0.00  std::_List_iterator<Rabbit*> std::__find_if<std::_List_iterator<Rabbit*>, __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}> >(__gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>, __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>, __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>)
  0.00      0.00     0.00   288343     0.00     0.00  std::_List_iterator<Rabbit*> std::__find_if<std::_List_iterator<Rabbit*>, __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}> >(__gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>, __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>, __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>, std::input_iterator_tag)
  0.00      0.00     0.00   288343     0.00     0.00  FemaleRabbit::grow()::{lambda(Rabbit*)#1}::operator()(Rabbit*) const
  0.00      0.00     0.00    82508     0.00     0.00  std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::_M_gen_rand()
  0.00      0.00     0.00      624     0.00     0.00  std::__detail::_Mod<unsigned long, 4294967296ul, 1ul, 0ul, true, true>::__calc(unsigned long)
  0.00      0.00     0.00      624     0.00     0.00  unsigned long std::__detail::__mod<unsigned long, 4294967296ul, 1ul, 0ul>(unsigned long)
  0.00      0.00     0.00      623     0.00     0.00  std::__detail::_Mod<unsigned long, 624ul, 1ul, 0ul, true, true>::__calc(unsigned long)
  0.00      0.00     0.00      623     0.00     0.00  unsigned long std::__detail::__mod<unsigned long, 624ul, 1ul, 0ul>(unsigned long)
  0.00      0.00     0.00      403     0.00     0.00  __gnu_cxx::__aligned_membuf<unsigned long>::_M_ptr() const
  0.00      0.00     0.00      403     0.00     0.00  __gnu_cxx::__aligned_membuf<unsigned long>::_M_addr() const
  0.00      0.00     0.00      403     0.00     0.00  std::_List_node<unsigned long>::_M_valptr() const
  0.00      0.00     0.00      403     0.00     0.00  std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_node_count() const
  0.00      0.00     0.00      403     0.00     0.00  std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::size() const
  0.00      0.00     0.00      202     0.00     0.00  Population::getNumberOfRabbit() const
  0.00      0.00     0.00      200     0.00     0.00  std::__array_traits<int, 100ul>::_S_ref(int const (&) [100], unsigned long)
  0.00      0.00     0.00      200     0.00     0.00  std::array<int, 100ul>::operator[](unsigned long)
  0.00      0.00     0.00      100     0.00     0.00  Population::passTime(unsigned int)
  0.00      0.00     0.00      100     0.00     0.00  std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::remove(Rabbit* const&)
  0.00      0.00     0.00      100     0.00     0.00  Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1} std::for_each<std::_List_iterator<Rabbit*>, Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1}>(std::_List_iterator<Rabbit*>, Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1}, Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1})
  0.00      0.00     0.00      100     0.00     0.00  Population::passTime(unsigned int)::{lambda(Rabbit*&)#2} std::for_each<std::_List_iterator<Rabbit*>, Population::passTime(unsigned int)::{lambda(Rabbit*&)#2}>(std::_List_iterator<Rabbit*>, Population::passTime(unsigned int)::{lambda(Rabbit*&)#2}, Population::passTime(unsigned int)::{lambda(Rabbit*&)#2})
  0.00      0.00     0.00        8     0.00     0.00  std::_List_const_iterator<Rabbit*>::_List_const_iterator(std::__detail::_List_node_base const*)
  0.00      0.00     0.00        4     0.00     0.00  std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::end() const
  0.00      0.00     0.00        4     0.00     0.00  std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::begin() const
  0.00      0.00     0.00        3     0.00     0.00  std::uniform_int_distribution<int>::param_type::param_type(int, int)
  0.00      0.00     0.00        3     0.00     0.00  std::uniform_int_distribution<int>::uniform_int_distribution(int, int)
  0.00      0.00     0.00        2     0.00     0.00  Population::getMeanDeathAge() const
  0.00      0.00     0.00        2     0.00     0.00  Population::getNumberOfMaleRabbit() const
  0.00      0.00     0.00        2     0.00     0.00  Population::getNumberOfFemaleRabbit() const
  0.00      0.00     0.00        2     0.00     0.00  Population::getBirth() const
  0.00      0.00     0.00        2     0.00     0.00  Population::getDeath() const
  0.00      0.00     0.00        2     0.00     0.00  Population::getNumberOfMaleRabbit() const::{lambda(Rabbit*)#1} std::for_each<std::_List_const_iterator<Rabbit*>, Population::getNumberOfMaleRabbit() const::{lambda(Rabbit*)#1}>(std::_List_const_iterator<Rabbit*>, Population::getNumberOfMaleRabbit() const::{lambda(Rabbit*)#1}, Population::getNumberOfMaleRabbit() const::{lambda(Rabbit*)#1})
  0.00      0.00     0.00        2     0.00     0.00  Population::getNumberOfFemaleRabbit() const::{lambda(Rabbit*)#1} std::for_each<std::_List_const_iterator<Rabbit*>, Population::getNumberOfFemaleRabbit() const::{lambda(Rabbit*)#1}>(std::_List_const_iterator<Rabbit*>, Population::getNumberOfFemaleRabbit() const::{lambda(Rabbit*)#1}, Population::getNumberOfFemaleRabbit() const::{lambda(Rabbit*)#1})
  0.00      0.00     0.00        2     0.00     0.00  operator<<(std::ostream&, Population const&)
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN10PopulationC2Ev
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN12FemaleRabbitC2ERNSt7__cxx114listIP6RabbitSaIS3_EEE
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I_generator
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I_main
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  Population::Population(unsigned int, unsigned int)
  0.00      0.00     0.00        1     0.00     0.00  Population::~Population()
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<Rabbit*> >::new_allocator()
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<Rabbit*> >::~new_allocator()
  0.00      0.00     0.00        1     0.00     0.00  std::allocator<std::_List_node<Rabbit*> >::allocator()
  0.00      0.00     0.00        1     0.00     0.00  std::allocator<std::_List_node<Rabbit*> >::~allocator()
  0.00      0.00     0.00        1     0.00     0.00  std::normal_distribution<double>::param_type::param_type(double, double)
  0.00      0.00     0.00        1     0.00     0.00  std::normal_distribution<double>::normal_distribution(double, double)
  0.00      0.00     0.00        1     0.00     0.00  std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::seed(unsigned long)
  0.00      0.00     0.00        1     0.00     0.00  std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::mersenne_twister_engine(unsigned long)
  0.00      0.00     0.00        1     0.00     0.00  std::uniform_real_distribution<double>::param_type::param_type(double, double)
  0.00      0.00     0.00        1     0.00     0.00  std::uniform_real_distribution<double>::uniform_real_distribution(double, double)
  0.00      0.00     0.00        1     0.00     0.00  std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_List_impl::_List_impl()
  0.00      0.00     0.00        1     0.00     0.00  std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_List_impl::~_List_impl()
  0.00      0.00     0.00        1     0.00     0.00  std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_set_size(unsigned long)
  0.00      0.00     0.00        1     0.00     0.00  std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_init()
  0.00      0.00     0.00        1     0.00     0.00  std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_clear()
  0.00      0.00     0.00        1     0.00     0.00  std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_List_base()
  0.00      0.00     0.00        1     0.00     0.00  std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::~_List_base()
  0.00      0.00     0.00        1     0.00     0.00  std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::list()
  0.00      0.00     0.00        1     0.00     0.00  std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::~list()
  0.00      0.00     0.00        1     0.00     0.00  Population::~Population()::{lambda(Rabbit*&)#1} std::for_each<std::_List_iterator<Rabbit*>, Population::~Population()::{lambda(Rabbit*&)#1}>(std::_List_iterator<Rabbit*>, Population::~Population()::{lambda(Rabbit*&)#1}, Population::~Population()::{lambda(Rabbit*&)#1})

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2018 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) no time propagated

index % time    self  children    called     name
                0.00    0.00 67116445/67116445     std::_List_node<Rabbit*>::_M_valptr() [10]
[8]      0.0    0.00    0.00 67116445         __gnu_cxx::__aligned_membuf<Rabbit*>::_M_ptr() [8]
                0.00    0.00 67116445/67116445     __gnu_cxx::__aligned_membuf<Rabbit*>::_M_addr() [9]
-----------------------------------------------
                0.00    0.00 67116445/67116445     __gnu_cxx::__aligned_membuf<Rabbit*>::_M_ptr() [8]
[9]      0.0    0.00    0.00 67116445         __gnu_cxx::__aligned_membuf<Rabbit*>::_M_addr() [9]
-----------------------------------------------
                0.00    0.00 1281278/67116445     std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_clear() [152]
                0.00    0.00 2496877/67116445     std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::_M_erase(std::_List_iterator<Rabbit*>) [71]
                0.00    0.00 3778155/67116445     std::_List_node<Rabbit*>* std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::_M_create_node<Rabbit*>(Rabbit*&&) [57]
                0.00    0.00 59560135/67116445     std::_List_iterator<Rabbit*>::operator*() const [11]
[10]     0.0    0.00    0.00 67116445         std::_List_node<Rabbit*>::_M_valptr() [10]
                0.00    0.00 67116445/67116445     __gnu_cxx::__aligned_membuf<Rabbit*>::_M_ptr() [8]
-----------------------------------------------
                0.00    0.00  288343/59560135     bool __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>::operator()<std::_List_iterator<Rabbit*> >(std::_List_iterator<Rabbit*>) [84]
                0.00    0.00 1281278/59560135     Population::~Population()::{lambda(Rabbit*&)#1} std::for_each<std::_List_iterator<Rabbit*>, Population::~Population()::{lambda(Rabbit*&)#1}>(std::_List_iterator<Rabbit*>, Population::~Population()::{lambda(Rabbit*&)#1}, Population::~Population()::{lambda(Rabbit*&)#1}) [157]
                0.00    0.00 18497879/59560135     Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1} std::for_each<std::_List_iterator<Rabbit*>, Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1}>(std::_List_iterator<Rabbit*>, Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1}, Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1}) [113]
                0.00    0.00 18497879/59560135     Population::passTime(unsigned int)::{lambda(Rabbit*&)#2} std::for_each<std::_List_iterator<Rabbit*>, Population::passTime(unsigned int)::{lambda(Rabbit*&)#2}>(std::_List_iterator<Rabbit*>, Population::passTime(unsigned int)::{lambda(Rabbit*&)#2}, Population::passTime(unsigned int)::{lambda(Rabbit*&)#2}) [114]
                0.00    0.00 20994756/59560135     std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::remove(Rabbit* const&) [112]
[11]     0.0    0.00    0.00 59560135         std::_List_iterator<Rabbit*>::operator*() const [11]
                0.00    0.00 59560135/67116445     std::_List_node<Rabbit*>::_M_valptr() [10]
-----------------------------------------------
                0.00    0.00  288343/57063659     std::_List_iterator<Rabbit*> std::__find_if<std::_List_iterator<Rabbit*>, __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}> >(__gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>, __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>, __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>, std::input_iterator_tag) [96]
                0.00    0.00 1281279/57063659     Population::~Population()::{lambda(Rabbit*&)#1} std::for_each<std::_List_iterator<Rabbit*>, Population::~Population()::{lambda(Rabbit*&)#1}>(std::_List_iterator<Rabbit*>, Population::~Population()::{lambda(Rabbit*&)#1}, Population::~Population()::{lambda(Rabbit*&)#1}) [157]
                0.00    0.00 18497979/57063659     Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1} std::for_each<std::_List_iterator<Rabbit*>, Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1}>(std::_List_iterator<Rabbit*>, Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1}, Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1}) [113]
                0.00    0.00 18497979/57063659     Population::passTime(unsigned int)::{lambda(Rabbit*&)#2} std::for_each<std::_List_iterator<Rabbit*>, Population::passTime(unsigned int)::{lambda(Rabbit*&)#2}>(std::_List_iterator<Rabbit*>, Population::passTime(unsigned int)::{lambda(Rabbit*&)#2}, Population::passTime(unsigned int)::{lambda(Rabbit*&)#2}) [114]
                0.00    0.00 18498079/57063659     std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::remove(Rabbit* const&) [112]
[12]     0.0    0.00    0.00 57063659         std::_List_iterator<Rabbit*>::operator!=(std::_List_iterator<Rabbit*> const&) const [12]
-----------------------------------------------
                0.00    0.00 1281278/56774915     Population::~Population()::{lambda(Rabbit*&)#1} std::for_each<std::_List_iterator<Rabbit*>, Population::~Population()::{lambda(Rabbit*&)#1}>(std::_List_iterator<Rabbit*>, Population::~Population()::{lambda(Rabbit*&)#1}, Population::~Population()::{lambda(Rabbit*&)#1}) [157]
                0.00    0.00 18497879/56774915     Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1} std::for_each<std::_List_iterator<Rabbit*>, Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1}>(std::_List_iterator<Rabbit*>, Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1}, Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1}) [113]
                0.00    0.00 18497879/56774915     Population::passTime(unsigned int)::{lambda(Rabbit*&)#2} std::for_each<std::_List_iterator<Rabbit*>, Population::passTime(unsigned int)::{lambda(Rabbit*&)#2}>(std::_List_iterator<Rabbit*>, Population::passTime(unsigned int)::{lambda(Rabbit*&)#2}, Population::passTime(unsigned int)::{lambda(Rabbit*&)#2}) [114]
                0.00    0.00 18497879/56774915     std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::remove(Rabbit* const&) [112]
[13]     0.0    0.00    0.00 56774915         std::_List_iterator<Rabbit*>::operator++() [13]
-----------------------------------------------
                0.00    0.00 6202871/51484795     int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<int>::param_type const&) [37]
                0.00    0.00 45281924/51484795     double std::generate_canonical<double, 53ul, std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [18]
[14]     0.0    0.00    0.00 51484795         std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() [14]
                0.00    0.00   82508/82508       std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::_M_gen_rand() [98]
-----------------------------------------------
                0.00    0.00 45281924/45281924     double std::generate_canonical<double, 53ul, std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [18]
[15]     0.0    0.00    0.00 45281924         std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::min() [15]
-----------------------------------------------
                0.00    0.00 44548068/44548068     double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_real_distribution<double>::param_type const&) [22]
[16]     0.0    0.00    0.00 44548068         std::uniform_real_distribution<double>::param_type::a() const [16]
-----------------------------------------------
                0.00    0.00  366928/22640962     double std::normal_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::normal_distribution<double>::param_type const&) [90]
                0.00    0.00 22274034/22640962     double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_real_distribution<double>::param_type const&) [22]
[17]     0.0    0.00    0.00 22640962         std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::operator()() [17]
                0.00    0.00 22640962/22640962     double std::generate_canonical<double, 53ul, std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [18]
-----------------------------------------------
                0.00    0.00 22640962/22640962     std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::operator()() [17]
[18]     0.0    0.00    0.00 22640962         double std::generate_canonical<double, 53ul, std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [18]
                0.00    0.00 45281924/51484795     std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() [14]
                0.00    0.00 45281924/45281924     std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::min() [15]
-----------------------------------------------
                0.00    0.00  288343/22562377     double std::normal_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::normal_distribution<double>::param_type const&) [90]
                0.00    0.00 22274034/22562377     double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_real_distribution<double>::param_type const&) [22]
[19]     0.0    0.00    0.00 22562377         std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::_Adaptor(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [19]
-----------------------------------------------
                0.00    0.00 22274034/22274034     double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_real_distribution<double>::param_type const&) [22]
[20]     0.0    0.00    0.00 22274034         std::uniform_real_distribution<double>::param_type::b() const [20]
-----------------------------------------------
                0.00    0.00 3776155/22274034     FemaleRabbit::grow() [30]
                0.00    0.00 18497879/22274034     Rabbit::hasToDie() const [25]
[21]     0.0    0.00    0.00 22274034         double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [21]
                0.00    0.00 22274034/22274034     double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_real_distribution<double>::param_type const&) [22]
-----------------------------------------------
                0.00    0.00 22274034/22274034     double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [21]
[22]     0.0    0.00    0.00 22274034         double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_real_distribution<double>::param_type const&) [22]
                0.00    0.00 44548068/44548068     std::uniform_real_distribution<double>::param_type::a() const [16]
                0.00    0.00 22274034/22640962     std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::operator()() [17]
                0.00    0.00 22274034/22562377     std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::_Adaptor(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [19]
                0.00    0.00 22274034/22274034     std::uniform_real_distribution<double>::param_type::b() const [20]
-----------------------------------------------
                0.00    0.00  288343/19074565     FemaleRabbit::grow()::{lambda(Rabbit*)#1}::operator()(Rabbit*) const [97]
                0.00    0.00  288343/19074565     FemaleRabbit::grow() [30]
                0.00    0.00 18497879/19074565     Rabbit::hasToDie() const [25]
[23]     0.0    0.00    0.00 19074565         Rabbit::hasMajority() const [23]
-----------------------------------------------
                0.00    0.00 9246447/18497879     FemaleRabbit::grow() [30]
                0.00    0.00 9251432/18497879     Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1}::operator()(Rabbit* const&) const [26]
[24]     0.0    0.00    0.00 18497879         Rabbit::grow() [24]
-----------------------------------------------
                0.00    0.00 18497879/18497879     Population::passTime(unsigned int)::{lambda(Rabbit*&)#2}::operator()(Rabbit*&) const [27]
[25]     0.0    0.00    0.00 18497879         Rabbit::hasToDie() const [25]
                0.00    0.00 18497879/19074565     Rabbit::hasMajority() const [23]
                0.00    0.00 18497879/22274034     double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [21]
-----------------------------------------------
                0.00    0.00 18497879/18497879     Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1} std::for_each<std::_List_iterator<Rabbit*>, Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1}>(std::_List_iterator<Rabbit*>, Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1}, Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1}) [113]
[26]     0.0    0.00    0.00 18497879         Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1}::operator()(Rabbit* const&) const [26]
                0.00    0.00 9251432/18497879     Rabbit::grow() [24]
                0.00    0.00 9246447/9246447     FemaleRabbit::grow() [30]
-----------------------------------------------
                0.00    0.00 18497879/18497879     Population::passTime(unsigned int)::{lambda(Rabbit*&)#2} std::for_each<std::_List_iterator<Rabbit*>, Population::passTime(unsigned int)::{lambda(Rabbit*&)#2}>(std::_List_iterator<Rabbit*>, Population::passTime(unsigned int)::{lambda(Rabbit*&)#2}, Population::passTime(unsigned int)::{lambda(Rabbit*&)#2}) [114]
[27]     0.0    0.00    0.00 18497879         Population::passTime(unsigned int)::{lambda(Rabbit*&)#2}::operator()(Rabbit*&) const [27]
                0.00    0.00 18497879/18497879     Rabbit::hasToDie() const [25]
                0.00    0.00 2496877/2496877     Rabbit::getAge() const [69]
                0.00    0.00 1248750/1889467     FemaleRabbit::~FemaleRabbit() [75]
                0.00    0.00 1248127/1888688     Rabbit::~Rabbit() [77]
-----------------------------------------------
                0.00    0.00 3778155/15112620     void std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::_M_insert<Rabbit*>(std::_List_iterator<Rabbit*>, Rabbit*&&) [58]
                0.00    0.00 3778155/15112620     std::_List_node<Rabbit*>* std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::_M_create_node<Rabbit*>(Rabbit*&&) [57]
                0.00    0.00 3778155/15112620     void std::allocator_traits<std::allocator<std::_List_node<Rabbit*> > >::construct<Rabbit*, Rabbit*>(std::allocator<std::_List_node<Rabbit*> >&, Rabbit**, Rabbit*&&) [53]
                0.00    0.00 3778155/15112620     void __gnu_cxx::new_allocator<std::_List_node<Rabbit*> >::construct<Rabbit*, Rabbit*>(Rabbit**, Rabbit*&&) [45]
[28]     0.0    0.00    0.00 15112620         Rabbit*&& std::forward<Rabbit*>(std::remove_reference<Rabbit*>::type&) [28]
-----------------------------------------------
                0.00    0.00 12405742/12405742     int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<int>::param_type const&) [37]
[29]     0.0    0.00    0.00 12405742         std::uniform_int_distribution<int>::param_type::a() const [29]
-----------------------------------------------
                0.00    0.00 9246447/9246447     Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1}::operator()(Rabbit* const&) const [26]
[30]     0.0    0.00    0.00 9246447         FemaleRabbit::grow() [30]
                0.00    0.00 9246447/18497879     Rabbit::grow() [24]
                0.00    0.00 3776155/22274034     double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [21]
                0.00    0.00 3776155/3778155     std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::push_back(Rabbit*&&) [59]
                0.00    0.00 2424716/6202871     int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [36]
                0.00    0.00 1888467/1889467     FemaleRabbit::FemaleRabbit(std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >&) [74]
                0.00    0.00 1887688/3778155     Rabbit::Rabbit() [40]
                0.00    0.00  288343/288343      double std::normal_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [89]
                0.00    0.00  288343/4066799     std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::end() [39]
                0.00    0.00  288343/288644      std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::begin() [82]
                0.00    0.00  288343/288343      bool std::any_of<std::_List_iterator<Rabbit*>, FemaleRabbit::grow()::{lambda(Rabbit*)#1}>(std::_List_iterator<Rabbit*>, FemaleRabbit::grow()::{lambda(Rabbit*)#1}, FemaleRabbit::grow()::{lambda(Rabbit*)#1}) [92]
                0.00    0.00  288343/19074565     Rabbit::hasMajority() const [23]
-----------------------------------------------
                0.00    0.00 1281278/7556310     std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_clear() [152]
                0.00    0.00 2496877/7556310     std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::_M_erase(std::_List_iterator<Rabbit*>) [71]
                0.00    0.00 3778155/7556310     std::_List_node<Rabbit*>* std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::_M_create_node<Rabbit*>(Rabbit*&&) [57]
[31]     0.0    0.00    0.00 7556310         std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_get_Node_allocator() [31]
-----------------------------------------------
                0.00    0.00 6275033/6275033     std::_List_node<unsigned long>::_M_valptr() [34]
[32]     0.0    0.00    0.00 6275033         __gnu_cxx::__aligned_membuf<unsigned long>::_M_ptr() [32]
                0.00    0.00 6275033/6275033     __gnu_cxx::__aligned_membuf<unsigned long>::_M_addr() [33]
-----------------------------------------------
                0.00    0.00 6275033/6275033     __gnu_cxx::__aligned_membuf<unsigned long>::_M_ptr() [32]
[33]     0.0    0.00    0.00 6275033         __gnu_cxx::__aligned_membuf<unsigned long>::_M_addr() [33]
-----------------------------------------------
                0.00    0.00       1/6275033     std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_set_size(unsigned long) [150]
                0.00    0.00 2496877/6275033     std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_dec_size(unsigned long) [70]
                0.00    0.00 3778155/6275033     std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_inc_size(unsigned long) [55]
[34]     0.0    0.00    0.00 6275033         std::_List_node<unsigned long>::_M_valptr() [34]
                0.00    0.00 6275033/6275033     __gnu_cxx::__aligned_membuf<unsigned long>::_M_ptr() [32]
-----------------------------------------------
                0.00    0.00 6202871/6202871     int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<int>::param_type const&) [37]
[35]     0.0    0.00    0.00 6202871         std::uniform_int_distribution<int>::param_type::b() const [35]
-----------------------------------------------
                0.00    0.00 2424716/6202871     FemaleRabbit::grow() [30]
                0.00    0.00 3778155/6202871     Rabbit::Rabbit() [40]
[36]     0.0    0.00    0.00 6202871         int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [36]
                0.00    0.00 6202871/6202871     int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<int>::param_type const&) [37]
-----------------------------------------------
                0.00    0.00 6202871/6202871     int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [36]
[37]     0.0    0.00    0.00 6202871         int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<int>::param_type const&) [37]
                0.00    0.00 12405742/12405742     std::uniform_int_distribution<int>::param_type::a() const [29]
                0.00    0.00 6202871/6202871     std::uniform_int_distribution<int>::param_type::b() const [35]
                0.00    0.00 6202871/51484795     std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() [14]
-----------------------------------------------
                0.00    0.00  288644/4355443     std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::begin() [82]
                0.00    0.00 4066799/4355443     std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::end() [39]
[38]     0.0    0.00    0.00 4355443         std::_List_iterator<Rabbit*>::_List_iterator(std::__detail::_List_node_base*) [38]
-----------------------------------------------
                0.00    0.00       1/4066799     Population::~Population() [137]
                0.00    0.00     100/4066799     std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::remove(Rabbit* const&) [112]
                0.00    0.00     200/4066799     Population::passTime(unsigned int) [111]
                0.00    0.00  288343/4066799     FemaleRabbit::grow() [30]
                0.00    0.00 3778155/4066799     std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::push_back(Rabbit*&&) [59]
[39]     0.0    0.00    0.00 4066799         std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::end() [39]
                0.00    0.00 4066799/4355443     std::_List_iterator<Rabbit*>::_List_iterator(std::__detail::_List_node_base*) [38]
-----------------------------------------------
                0.00    0.00    1000/3778155     Population::Population(unsigned int, unsigned int) [136]
                0.00    0.00 1887688/3778155     FemaleRabbit::grow() [30]
                0.00    0.00 1889467/3778155     FemaleRabbit::FemaleRabbit(std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >&) [74]
[40]     0.0    0.00    0.00 3778155         Rabbit::Rabbit() [40]
                0.00    0.00 3778155/6202871     int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [36]
-----------------------------------------------
                0.00    0.00 1888688/3778155     Rabbit::~Rabbit() [77]
                0.00    0.00 1889467/3778155     FemaleRabbit::~FemaleRabbit() [76]
[41]     0.0    0.00    0.00 3778155         Rabbit::~Rabbit() [41]
-----------------------------------------------
                0.00    0.00 3778155/3778155     std::allocator_traits<std::allocator<std::_List_node<Rabbit*> > >::deallocate(std::allocator<std::_List_node<Rabbit*> >&, std::_List_node<Rabbit*>*, unsigned long) [50]
[42]     0.0    0.00    0.00 3778155         __gnu_cxx::new_allocator<std::_List_node<Rabbit*> >::deallocate(std::_List_node<Rabbit*>*, unsigned long) [42]
-----------------------------------------------
                0.00    0.00 3778155/3778155     void std::allocator_traits<std::allocator<std::_List_node<Rabbit*> > >::destroy<Rabbit*>(std::allocator<std::_List_node<Rabbit*> >&, Rabbit**) [51]
[43]     0.0    0.00    0.00 3778155         void __gnu_cxx::new_allocator<std::_List_node<Rabbit*> >::destroy<Rabbit*>(Rabbit**) [43]
-----------------------------------------------
                0.00    0.00 3778155/3778155     std::allocator_traits<std::allocator<std::_List_node<Rabbit*> > >::allocate(std::allocator<std::_List_node<Rabbit*> >&, unsigned long) [52]
[44]     0.0    0.00    0.00 3778155         __gnu_cxx::new_allocator<std::_List_node<Rabbit*> >::allocate(unsigned long, void const*) [44]
                0.00    0.00 3778155/3778155     __gnu_cxx::new_allocator<std::_List_node<Rabbit*> >::max_size() const [46]
-----------------------------------------------
                0.00    0.00 3778155/3778155     void std::allocator_traits<std::allocator<std::_List_node<Rabbit*> > >::construct<Rabbit*, Rabbit*>(std::allocator<std::_List_node<Rabbit*> >&, Rabbit**, Rabbit*&&) [53]
[45]     0.0    0.00    0.00 3778155         void __gnu_cxx::new_allocator<std::_List_node<Rabbit*> >::construct<Rabbit*, Rabbit*>(Rabbit**, Rabbit*&&) [45]
                0.00    0.00 3778155/15112620     Rabbit*&& std::forward<Rabbit*>(std::remove_reference<Rabbit*>::type&) [28]
                0.00    0.00 3778155/3778155     operator new(unsigned long, void*) [62]
-----------------------------------------------
                0.00    0.00 3778155/3778155     __gnu_cxx::new_allocator<std::_List_node<Rabbit*> >::allocate(unsigned long, void const*) [44]
[46]     0.0    0.00    0.00 3778155         __gnu_cxx::new_allocator<std::_List_node<Rabbit*> >::max_size() const [46]
-----------------------------------------------
                0.00    0.00 3778155/3778155     std::_List_node<Rabbit*>* std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::_M_create_node<Rabbit*>(Rabbit*&&) [57]
[47]     0.0    0.00    0.00 3778155         std::__allocated_ptr<std::allocator<std::_List_node<Rabbit*> > >::__allocated_ptr(std::allocator<std::_List_node<Rabbit*> >&, std::_List_node<Rabbit*>*) [47]
                0.00    0.00 3778155/3778155     std::allocator<std::_List_node<Rabbit*> >* std::__addressof<std::allocator<std::_List_node<Rabbit*> > >(std::allocator<std::_List_node<Rabbit*> >&) [60]
-----------------------------------------------
                0.00    0.00 3778155/3778155     std::_List_node<Rabbit*>* std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::_M_create_node<Rabbit*>(Rabbit*&&) [57]
[48]     0.0    0.00    0.00 3778155         std::__allocated_ptr<std::allocator<std::_List_node<Rabbit*> > >::~__allocated_ptr() [48]
-----------------------------------------------
                0.00    0.00 3778155/3778155     std::_List_node<Rabbit*>* std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::_M_create_node<Rabbit*>(Rabbit*&&) [57]
[49]     0.0    0.00    0.00 3778155         std::__allocated_ptr<std::allocator<std::_List_node<Rabbit*> > >::operator=(decltype(nullptr)) [49]
-----------------------------------------------
                0.00    0.00 3778155/3778155     std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_put_node(std::_List_node<Rabbit*>*) [56]
[50]     0.0    0.00    0.00 3778155         std::allocator_traits<std::allocator<std::_List_node<Rabbit*> > >::deallocate(std::allocator<std::_List_node<Rabbit*> >&, std::_List_node<Rabbit*>*, unsigned long) [50]
                0.00    0.00 3778155/3778155     __gnu_cxx::new_allocator<std::_List_node<Rabbit*> >::deallocate(std::_List_node<Rabbit*>*, unsigned long) [42]
-----------------------------------------------
                0.00    0.00 1281278/3778155     std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_clear() [152]
                0.00    0.00 2496877/3778155     std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::_M_erase(std::_List_iterator<Rabbit*>) [71]
[51]     0.0    0.00    0.00 3778155         void std::allocator_traits<std::allocator<std::_List_node<Rabbit*> > >::destroy<Rabbit*>(std::allocator<std::_List_node<Rabbit*> >&, Rabbit**) [51]
                0.00    0.00 3778155/3778155     void __gnu_cxx::new_allocator<std::_List_node<Rabbit*> >::destroy<Rabbit*>(Rabbit**) [43]
-----------------------------------------------
                0.00    0.00 3778155/3778155     std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_get_node() [54]
[52]     0.0    0.00    0.00 3778155         std::allocator_traits<std::allocator<std::_List_node<Rabbit*> > >::allocate(std::allocator<std::_List_node<Rabbit*> >&, unsigned long) [52]
                0.00    0.00 3778155/3778155     __gnu_cxx::new_allocator<std::_List_node<Rabbit*> >::allocate(unsigned long, void const*) [44]
-----------------------------------------------
                0.00    0.00 3778155/3778155     std::_List_node<Rabbit*>* std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::_M_create_node<Rabbit*>(Rabbit*&&) [57]
[53]     0.0    0.00    0.00 3778155         void std::allocator_traits<std::allocator<std::_List_node<Rabbit*> > >::construct<Rabbit*, Rabbit*>(std::allocator<std::_List_node<Rabbit*> >&, Rabbit**, Rabbit*&&) [53]
                0.00    0.00 3778155/15112620     Rabbit*&& std::forward<Rabbit*>(std::remove_reference<Rabbit*>::type&) [28]
                0.00    0.00 3778155/3778155     void __gnu_cxx::new_allocator<std::_List_node<Rabbit*> >::construct<Rabbit*, Rabbit*>(Rabbit**, Rabbit*&&) [45]
-----------------------------------------------
                0.00    0.00 3778155/3778155     std::_List_node<Rabbit*>* std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::_M_create_node<Rabbit*>(Rabbit*&&) [57]
[54]     0.0    0.00    0.00 3778155         std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_get_node() [54]
                0.00    0.00 3778155/3778155     std::allocator_traits<std::allocator<std::_List_node<Rabbit*> > >::allocate(std::allocator<std::_List_node<Rabbit*> >&, unsigned long) [52]
-----------------------------------------------
                0.00    0.00 3778155/3778155     void std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::_M_insert<Rabbit*>(std::_List_iterator<Rabbit*>, Rabbit*&&) [58]
[55]     0.0    0.00    0.00 3778155         std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_inc_size(unsigned long) [55]
                0.00    0.00 3778155/6275033     std::_List_node<unsigned long>::_M_valptr() [34]
-----------------------------------------------
                0.00    0.00 1281278/3778155     std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_clear() [152]
                0.00    0.00 2496877/3778155     std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::_M_erase(std::_List_iterator<Rabbit*>) [71]
[56]     0.0    0.00    0.00 3778155         std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_put_node(std::_List_node<Rabbit*>*) [56]
                0.00    0.00 3778155/3778155     std::allocator_traits<std::allocator<std::_List_node<Rabbit*> > >::deallocate(std::allocator<std::_List_node<Rabbit*> >&, std::_List_node<Rabbit*>*, unsigned long) [50]
-----------------------------------------------
                0.00    0.00 3778155/3778155     void std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::_M_insert<Rabbit*>(std::_List_iterator<Rabbit*>, Rabbit*&&) [58]
[57]     0.0    0.00    0.00 3778155         std::_List_node<Rabbit*>* std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::_M_create_node<Rabbit*>(Rabbit*&&) [57]
                0.00    0.00 3778155/3778155     std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_get_node() [54]
                0.00    0.00 3778155/7556310     std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_get_Node_allocator() [31]
                0.00    0.00 3778155/3778155     std::__allocated_ptr<std::allocator<std::_List_node<Rabbit*> > >::__allocated_ptr(std::allocator<std::_List_node<Rabbit*> >&, std::_List_node<Rabbit*>*) [47]
                0.00    0.00 3778155/15112620     Rabbit*&& std::forward<Rabbit*>(std::remove_reference<Rabbit*>::type&) [28]
                0.00    0.00 3778155/67116445     std::_List_node<Rabbit*>::_M_valptr() [10]
                0.00    0.00 3778155/3778155     void std::allocator_traits<std::allocator<std::_List_node<Rabbit*> > >::construct<Rabbit*, Rabbit*>(std::allocator<std::_List_node<Rabbit*> >&, Rabbit**, Rabbit*&&) [53]
                0.00    0.00 3778155/3778155     std::__allocated_ptr<std::allocator<std::_List_node<Rabbit*> > >::operator=(decltype(nullptr)) [49]
                0.00    0.00 3778155/3778155     std::__allocated_ptr<std::allocator<std::_List_node<Rabbit*> > >::~__allocated_ptr() [48]
-----------------------------------------------
                0.00    0.00 3778155/3778155     std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::push_back(Rabbit*&&) [59]
[58]     0.0    0.00    0.00 3778155         void std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::_M_insert<Rabbit*>(std::_List_iterator<Rabbit*>, Rabbit*&&) [58]
                0.00    0.00 3778155/15112620     Rabbit*&& std::forward<Rabbit*>(std::remove_reference<Rabbit*>::type&) [28]
                0.00    0.00 3778155/3778155     std::_List_node<Rabbit*>* std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::_M_create_node<Rabbit*>(Rabbit*&&) [57]
                0.00    0.00 3778155/3778155     std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_inc_size(unsigned long) [55]
-----------------------------------------------
                0.00    0.00    2000/3778155     Population::Population(unsigned int, unsigned int) [136]
                0.00    0.00 3776155/3778155     FemaleRabbit::grow() [30]
[59]     0.0    0.00    0.00 3778155         std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::push_back(Rabbit*&&) [59]
                0.00    0.00 3778155/3778155     std::remove_reference<Rabbit*&>::type&& std::move<Rabbit*&>(Rabbit*&) [61]
                0.00    0.00 3778155/4066799     std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::end() [39]
                0.00    0.00 3778155/3778155     void std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::_M_insert<Rabbit*>(std::_List_iterator<Rabbit*>, Rabbit*&&) [58]
-----------------------------------------------
                0.00    0.00 3778155/3778155     std::__allocated_ptr<std::allocator<std::_List_node<Rabbit*> > >::__allocated_ptr(std::allocator<std::_List_node<Rabbit*> >&, std::_List_node<Rabbit*>*) [47]
[60]     0.0    0.00    0.00 3778155         std::allocator<std::_List_node<Rabbit*> >* std::__addressof<std::allocator<std::_List_node<Rabbit*> > >(std::allocator<std::_List_node<Rabbit*> >&) [60]
-----------------------------------------------
                0.00    0.00 3778155/3778155     std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::push_back(Rabbit*&&) [59]
[61]     0.0    0.00    0.00 3778155         std::remove_reference<Rabbit*&>::type&& std::move<Rabbit*&>(Rabbit*&) [61]
-----------------------------------------------
                0.00    0.00 3778155/3778155     void __gnu_cxx::new_allocator<std::_List_node<Rabbit*> >::construct<Rabbit*, Rabbit*>(Rabbit**, Rabbit*&&) [45]
[62]     0.0    0.00    0.00 3778155         operator new(unsigned long, void*) [62]
-----------------------------------------------
                0.00    0.00 1283280/2566560     Population::getNumberOfFemaleRabbit() const::{lambda(Rabbit*)#1} std::for_each<std::_List_const_iterator<Rabbit*>, Population::getNumberOfFemaleRabbit() const::{lambda(Rabbit*)#1}>(std::_List_const_iterator<Rabbit*>, Population::getNumberOfFemaleRabbit() const::{lambda(Rabbit*)#1}, Population::getNumberOfFemaleRabbit() const::{lambda(Rabbit*)#1}) [126]
                0.00    0.00 1283280/2566560     Population::getNumberOfMaleRabbit() const::{lambda(Rabbit*)#1} std::for_each<std::_List_const_iterator<Rabbit*>, Population::getNumberOfMaleRabbit() const::{lambda(Rabbit*)#1}>(std::_List_const_iterator<Rabbit*>, Population::getNumberOfMaleRabbit() const::{lambda(Rabbit*)#1}, Population::getNumberOfMaleRabbit() const::{lambda(Rabbit*)#1}) [125]
[63]     0.0    0.00    0.00 2566560         std::_List_const_iterator<Rabbit*>::operator!=(std::_List_const_iterator<Rabbit*> const&) const [63]
-----------------------------------------------
                0.00    0.00 2566556/2566556     std::_List_node<Rabbit*>::_M_valptr() const [66]
[64]     0.0    0.00    0.00 2566556         __gnu_cxx::__aligned_membuf<Rabbit*>::_M_ptr() const [64]
                0.00    0.00 2566556/2566556     __gnu_cxx::__aligned_membuf<Rabbit*>::_M_addr() const [65]
-----------------------------------------------
                0.00    0.00 2566556/2566556     __gnu_cxx::__aligned_membuf<Rabbit*>::_M_ptr() const [64]
[65]     0.0    0.00    0.00 2566556         __gnu_cxx::__aligned_membuf<Rabbit*>::_M_addr() const [65]
-----------------------------------------------
                0.00    0.00 2566556/2566556     std::_List_const_iterator<Rabbit*>::operator*() const [67]
[66]     0.0    0.00    0.00 2566556         std::_List_node<Rabbit*>::_M_valptr() const [66]
                0.00    0.00 2566556/2566556     __gnu_cxx::__aligned_membuf<Rabbit*>::_M_ptr() const [64]
-----------------------------------------------
                0.00    0.00 1283278/2566556     Population::getNumberOfFemaleRabbit() const::{lambda(Rabbit*)#1} std::for_each<std::_List_const_iterator<Rabbit*>, Population::getNumberOfFemaleRabbit() const::{lambda(Rabbit*)#1}>(std::_List_const_iterator<Rabbit*>, Population::getNumberOfFemaleRabbit() const::{lambda(Rabbit*)#1}, Population::getNumberOfFemaleRabbit() const::{lambda(Rabbit*)#1}) [126]
                0.00    0.00 1283278/2566556     Population::getNumberOfMaleRabbit() const::{lambda(Rabbit*)#1} std::for_each<std::_List_const_iterator<Rabbit*>, Population::getNumberOfMaleRabbit() const::{lambda(Rabbit*)#1}>(std::_List_const_iterator<Rabbit*>, Population::getNumberOfMaleRabbit() const::{lambda(Rabbit*)#1}, Population::getNumberOfMaleRabbit() const::{lambda(Rabbit*)#1}) [125]
[67]     0.0    0.00    0.00 2566556         std::_List_const_iterator<Rabbit*>::operator*() const [67]
                0.00    0.00 2566556/2566556     std::_List_node<Rabbit*>::_M_valptr() const [66]
-----------------------------------------------
                0.00    0.00 1283278/2566556     Population::getNumberOfFemaleRabbit() const::{lambda(Rabbit*)#1} std::for_each<std::_List_const_iterator<Rabbit*>, Population::getNumberOfFemaleRabbit() const::{lambda(Rabbit*)#1}>(std::_List_const_iterator<Rabbit*>, Population::getNumberOfFemaleRabbit() const::{lambda(Rabbit*)#1}, Population::getNumberOfFemaleRabbit() const::{lambda(Rabbit*)#1}) [126]
                0.00    0.00 1283278/2566556     Population::getNumberOfMaleRabbit() const::{lambda(Rabbit*)#1} std::for_each<std::_List_const_iterator<Rabbit*>, Population::getNumberOfMaleRabbit() const::{lambda(Rabbit*)#1}>(std::_List_const_iterator<Rabbit*>, Population::getNumberOfMaleRabbit() const::{lambda(Rabbit*)#1}, Population::getNumberOfMaleRabbit() const::{lambda(Rabbit*)#1}) [125]
[68]     0.0    0.00    0.00 2566556         std::_List_const_iterator<Rabbit*>::operator++() [68]
-----------------------------------------------
                0.00    0.00 2496877/2496877     Population::passTime(unsigned int)::{lambda(Rabbit*&)#2}::operator()(Rabbit*&) const [27]
[69]     0.0    0.00    0.00 2496877         Rabbit::getAge() const [69]
-----------------------------------------------
                0.00    0.00 2496877/2496877     std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::_M_erase(std::_List_iterator<Rabbit*>) [71]
[70]     0.0    0.00    0.00 2496877         std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_dec_size(unsigned long) [70]
                0.00    0.00 2496877/6275033     std::_List_node<unsigned long>::_M_valptr() [34]
-----------------------------------------------
                0.00    0.00 2496877/2496877     std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::remove(Rabbit* const&) [112]
[71]     0.0    0.00    0.00 2496877         std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::_M_erase(std::_List_iterator<Rabbit*>) [71]
                0.00    0.00 2496877/2496877     std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_dec_size(unsigned long) [70]
                0.00    0.00 2496877/67116445     std::_List_node<Rabbit*>::_M_valptr() [10]
                0.00    0.00 2496877/7556310     std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_get_Node_allocator() [31]
                0.00    0.00 2496877/3778155     void std::allocator_traits<std::allocator<std::_List_node<Rabbit*> > >::destroy<Rabbit*>(std::allocator<std::_List_node<Rabbit*> >&, Rabbit**) [51]
                0.00    0.00 2496877/3778155     std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_put_node(std::_List_node<Rabbit*>*) [56]
-----------------------------------------------
                0.00    0.00 2496877/2496877     std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::remove(Rabbit* const&) [112]
[72]     0.0    0.00    0.00 2496877         Rabbit* const* std::__addressof<Rabbit* const>(Rabbit* const&) [72]
-----------------------------------------------
                0.00    0.00 2496877/2496877     std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::remove(Rabbit* const&) [112]
[73]     0.0    0.00    0.00 2496877         Rabbit** std::__addressof<Rabbit*>(Rabbit*&) [73]
-----------------------------------------------
                0.00    0.00    1000/1889467     Population::Population(unsigned int, unsigned int) [136]
                0.00    0.00 1888467/1889467     FemaleRabbit::grow() [30]
[74]     0.0    0.00    0.00 1889467         FemaleRabbit::FemaleRabbit(std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >&) [74]
                0.00    0.00 1889467/3778155     Rabbit::Rabbit() [40]
-----------------------------------------------
                0.00    0.00  640717/1889467     Population::~Population()::{lambda(Rabbit*&)#1}::operator()(Rabbit*&) const [80]
                0.00    0.00 1248750/1889467     Population::passTime(unsigned int)::{lambda(Rabbit*&)#2}::operator()(Rabbit*&) const [27]
[75]     0.0    0.00    0.00 1889467         FemaleRabbit::~FemaleRabbit() [75]
                0.00    0.00 1889467/1889467     FemaleRabbit::~FemaleRabbit() [76]
-----------------------------------------------
                0.00    0.00 1889467/1889467     FemaleRabbit::~FemaleRabbit() [75]
[76]     0.0    0.00    0.00 1889467         FemaleRabbit::~FemaleRabbit() [76]
                0.00    0.00 1889467/3778155     Rabbit::~Rabbit() [41]
-----------------------------------------------
                0.00    0.00  640561/1888688     Population::~Population()::{lambda(Rabbit*&)#1}::operator()(Rabbit*&) const [80]
                0.00    0.00 1248127/1888688     Population::passTime(unsigned int)::{lambda(Rabbit*&)#2}::operator()(Rabbit*&) const [27]
[77]     0.0    0.00    0.00 1888688         Rabbit::~Rabbit() [77]
                0.00    0.00 1888688/3778155     Rabbit::~Rabbit() [41]
-----------------------------------------------
                0.00    0.00 1283278/1283278     Population::getNumberOfMaleRabbit() const::{lambda(Rabbit*)#1} std::for_each<std::_List_const_iterator<Rabbit*>, Population::getNumberOfMaleRabbit() const::{lambda(Rabbit*)#1}>(std::_List_const_iterator<Rabbit*>, Population::getNumberOfMaleRabbit() const::{lambda(Rabbit*)#1}, Population::getNumberOfMaleRabbit() const::{lambda(Rabbit*)#1}) [125]
[78]     0.0    0.00    0.00 1283278         Population::getNumberOfMaleRabbit() const::{lambda(Rabbit*)#1}::operator()(Rabbit*) const [78]
-----------------------------------------------
                0.00    0.00 1283278/1283278     Population::getNumberOfFemaleRabbit() const::{lambda(Rabbit*)#1} std::for_each<std::_List_const_iterator<Rabbit*>, Population::getNumberOfFemaleRabbit() const::{lambda(Rabbit*)#1}>(std::_List_const_iterator<Rabbit*>, Population::getNumberOfFemaleRabbit() const::{lambda(Rabbit*)#1}, Population::getNumberOfFemaleRabbit() const::{lambda(Rabbit*)#1}) [126]
[79]     0.0    0.00    0.00 1283278         Population::getNumberOfFemaleRabbit() const::{lambda(Rabbit*)#1}::operator()(Rabbit*) const [79]
-----------------------------------------------
                0.00    0.00 1281278/1281278     Population::~Population()::{lambda(Rabbit*&)#1} std::for_each<std::_List_iterator<Rabbit*>, Population::~Population()::{lambda(Rabbit*&)#1}>(std::_List_iterator<Rabbit*>, Population::~Population()::{lambda(Rabbit*&)#1}, Population::~Population()::{lambda(Rabbit*&)#1}) [157]
[80]     0.0    0.00    0.00 1281278         Population::~Population()::{lambda(Rabbit*&)#1}::operator()(Rabbit*&) const [80]
                0.00    0.00  640717/1889467     FemaleRabbit::~FemaleRabbit() [75]
                0.00    0.00  640561/1888688     Rabbit::~Rabbit() [77]
-----------------------------------------------
                0.00    0.00  288343/576686      __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}> __gnu_cxx::__ops::__pred_iter<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>(__gnu_cxx::__ops::_Iter_pred) [85]
                0.00    0.00  288343/576686      __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>::_Iter_pred({lambda(Rabbit*)#1}) [83]
[81]     0.0    0.00    0.00  576686         std::remove_reference<FemaleRabbit::grow()::{lambda(Rabbit*)#1}&>::type&& std::move<FemaleRabbit::grow()::{lambda(Rabbit*)#1}&>(std::remove_reference&&) [81]
-----------------------------------------------
                0.00    0.00       1/288644      Population::~Population() [137]
                0.00    0.00     100/288644      std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::remove(Rabbit* const&) [112]
                0.00    0.00     200/288644      Population::passTime(unsigned int) [111]
                0.00    0.00  288343/288644      FemaleRabbit::grow() [30]
[82]     0.0    0.00    0.00  288644         std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::begin() [82]
                0.00    0.00  288644/4355443     std::_List_iterator<Rabbit*>::_List_iterator(std::__detail::_List_node_base*) [38]
-----------------------------------------------
                0.00    0.00  288343/288343      __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}> __gnu_cxx::__ops::__pred_iter<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>(__gnu_cxx::__ops::_Iter_pred) [85]
[83]     0.0    0.00    0.00  288343         __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>::_Iter_pred({lambda(Rabbit*)#1}) [83]
                0.00    0.00  288343/576686      std::remove_reference<FemaleRabbit::grow()::{lambda(Rabbit*)#1}&>::type&& std::move<FemaleRabbit::grow()::{lambda(Rabbit*)#1}&>(std::remove_reference&&) [81]
-----------------------------------------------
                0.00    0.00  288343/288343      std::_List_iterator<Rabbit*> std::__find_if<std::_List_iterator<Rabbit*>, __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}> >(__gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>, __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>, __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>, std::input_iterator_tag) [96]
[84]     0.0    0.00    0.00  288343         bool __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>::operator()<std::_List_iterator<Rabbit*> >(std::_List_iterator<Rabbit*>) [84]
                0.00    0.00  288343/59560135     std::_List_iterator<Rabbit*>::operator*() const [11]
                0.00    0.00  288343/288343      FemaleRabbit::grow()::{lambda(Rabbit*)#1}::operator()(Rabbit*) const [97]
-----------------------------------------------
                0.00    0.00  288343/288343      std::_List_iterator<Rabbit*> std::find_if<std::_List_iterator<Rabbit*>, FemaleRabbit::grow()::{lambda(Rabbit*)#1}>(FemaleRabbit::grow()::{lambda(Rabbit*)#1}, FemaleRabbit::grow()::{lambda(Rabbit*)#1}, FemaleRabbit::grow()::{lambda(Rabbit*)#1}) [93]
[85]     0.0    0.00    0.00  288343         __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}> __gnu_cxx::__ops::__pred_iter<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>(__gnu_cxx::__ops::_Iter_pred) [85]
                0.00    0.00  288343/576686      std::remove_reference<FemaleRabbit::grow()::{lambda(Rabbit*)#1}&>::type&& std::move<FemaleRabbit::grow()::{lambda(Rabbit*)#1}&>(std::remove_reference&&) [81]
                0.00    0.00  288343/288343      __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>::_Iter_pred({lambda(Rabbit*)#1}) [83]
-----------------------------------------------
                0.00    0.00  288343/288343      bool std::none_of<std::_List_iterator<Rabbit*>, FemaleRabbit::grow()::{lambda(Rabbit*)#1}>(std::_List_iterator<Rabbit*>, FemaleRabbit::grow()::{lambda(Rabbit*)#1}, FemaleRabbit::grow()::{lambda(Rabbit*)#1}) [94]
[86]     0.0    0.00    0.00  288343         std::_List_iterator<Rabbit*>::operator==(std::_List_iterator<Rabbit*> const&) const [86]
-----------------------------------------------
                0.00    0.00  288343/288343      double std::normal_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::normal_distribution<double>::param_type const&) [90]
[87]     0.0    0.00    0.00  288343         std::normal_distribution<double>::param_type::mean() const [87]
-----------------------------------------------
                0.00    0.00  288343/288343      double std::normal_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::normal_distribution<double>::param_type const&) [90]
[88]     0.0    0.00    0.00  288343         std::normal_distribution<double>::param_type::stddev() const [88]
-----------------------------------------------
                0.00    0.00  288343/288343      FemaleRabbit::grow() [30]
[89]     0.0    0.00    0.00  288343         double std::normal_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [89]
                0.00    0.00  288343/288343      double std::normal_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::normal_distribution<double>::param_type const&) [90]
-----------------------------------------------
                0.00    0.00  288343/288343      double std::normal_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [89]
[90]     0.0    0.00    0.00  288343         double std::normal_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::normal_distribution<double>::param_type const&) [90]
                0.00    0.00  366928/22640962     std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::operator()() [17]
                0.00    0.00  288343/22562377     std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::_Adaptor(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [19]
                0.00    0.00  288343/288343      std::normal_distribution<double>::param_type::stddev() const [88]
                0.00    0.00  288343/288343      std::normal_distribution<double>::param_type::mean() const [87]
-----------------------------------------------
                0.00    0.00  288343/288343      std::_List_iterator<Rabbit*> std::__find_if<std::_List_iterator<Rabbit*>, __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}> >(__gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>, __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>, __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>) [95]
[91]     0.0    0.00    0.00  288343         std::iterator_traits<std::_List_iterator<Rabbit*> >::iterator_category std::__iterator_category<std::_List_iterator<Rabbit*> >(std::_List_iterator<Rabbit*> const&) [91]
-----------------------------------------------
                0.00    0.00  288343/288343      FemaleRabbit::grow() [30]
[92]     0.0    0.00    0.00  288343         bool std::any_of<std::_List_iterator<Rabbit*>, FemaleRabbit::grow()::{lambda(Rabbit*)#1}>(std::_List_iterator<Rabbit*>, FemaleRabbit::grow()::{lambda(Rabbit*)#1}, FemaleRabbit::grow()::{lambda(Rabbit*)#1}) [92]
                0.00    0.00  288343/288343      bool std::none_of<std::_List_iterator<Rabbit*>, FemaleRabbit::grow()::{lambda(Rabbit*)#1}>(std::_List_iterator<Rabbit*>, FemaleRabbit::grow()::{lambda(Rabbit*)#1}, FemaleRabbit::grow()::{lambda(Rabbit*)#1}) [94]
-----------------------------------------------
                0.00    0.00  288343/288343      bool std::none_of<std::_List_iterator<Rabbit*>, FemaleRabbit::grow()::{lambda(Rabbit*)#1}>(std::_List_iterator<Rabbit*>, FemaleRabbit::grow()::{lambda(Rabbit*)#1}, FemaleRabbit::grow()::{lambda(Rabbit*)#1}) [94]
[93]     0.0    0.00    0.00  288343         std::_List_iterator<Rabbit*> std::find_if<std::_List_iterator<Rabbit*>, FemaleRabbit::grow()::{lambda(Rabbit*)#1}>(FemaleRabbit::grow()::{lambda(Rabbit*)#1}, FemaleRabbit::grow()::{lambda(Rabbit*)#1}, FemaleRabbit::grow()::{lambda(Rabbit*)#1}) [93]
                0.00    0.00  288343/288343      __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}> __gnu_cxx::__ops::__pred_iter<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>(__gnu_cxx::__ops::_Iter_pred) [85]
                0.00    0.00  288343/288343      std::_List_iterator<Rabbit*> std::__find_if<std::_List_iterator<Rabbit*>, __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}> >(__gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>, __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>, __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>) [95]
-----------------------------------------------
                0.00    0.00  288343/288343      bool std::any_of<std::_List_iterator<Rabbit*>, FemaleRabbit::grow()::{lambda(Rabbit*)#1}>(std::_List_iterator<Rabbit*>, FemaleRabbit::grow()::{lambda(Rabbit*)#1}, FemaleRabbit::grow()::{lambda(Rabbit*)#1}) [92]
[94]     0.0    0.00    0.00  288343         bool std::none_of<std::_List_iterator<Rabbit*>, FemaleRabbit::grow()::{lambda(Rabbit*)#1}>(std::_List_iterator<Rabbit*>, FemaleRabbit::grow()::{lambda(Rabbit*)#1}, FemaleRabbit::grow()::{lambda(Rabbit*)#1}) [94]
                0.00    0.00  288343/288343      std::_List_iterator<Rabbit*> std::find_if<std::_List_iterator<Rabbit*>, FemaleRabbit::grow()::{lambda(Rabbit*)#1}>(FemaleRabbit::grow()::{lambda(Rabbit*)#1}, FemaleRabbit::grow()::{lambda(Rabbit*)#1}, FemaleRabbit::grow()::{lambda(Rabbit*)#1}) [93]
                0.00    0.00  288343/288343      std::_List_iterator<Rabbit*>::operator==(std::_List_iterator<Rabbit*> const&) const [86]
-----------------------------------------------
                0.00    0.00  288343/288343      std::_List_iterator<Rabbit*> std::find_if<std::_List_iterator<Rabbit*>, FemaleRabbit::grow()::{lambda(Rabbit*)#1}>(FemaleRabbit::grow()::{lambda(Rabbit*)#1}, FemaleRabbit::grow()::{lambda(Rabbit*)#1}, FemaleRabbit::grow()::{lambda(Rabbit*)#1}) [93]
[95]     0.0    0.00    0.00  288343         std::_List_iterator<Rabbit*> std::__find_if<std::_List_iterator<Rabbit*>, __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}> >(__gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>, __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>, __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>) [95]
                0.00    0.00  288343/288343      std::iterator_traits<std::_List_iterator<Rabbit*> >::iterator_category std::__iterator_category<std::_List_iterator<Rabbit*> >(std::_List_iterator<Rabbit*> const&) [91]
                0.00    0.00  288343/288343      std::_List_iterator<Rabbit*> std::__find_if<std::_List_iterator<Rabbit*>, __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}> >(__gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>, __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>, __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>, std::input_iterator_tag) [96]
-----------------------------------------------
                0.00    0.00  288343/288343      std::_List_iterator<Rabbit*> std::__find_if<std::_List_iterator<Rabbit*>, __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}> >(__gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>, __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>, __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>) [95]
[96]     0.0    0.00    0.00  288343         std::_List_iterator<Rabbit*> std::__find_if<std::_List_iterator<Rabbit*>, __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}> >(__gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>, __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>, __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>, std::input_iterator_tag) [96]
                0.00    0.00  288343/57063659     std::_List_iterator<Rabbit*>::operator!=(std::_List_iterator<Rabbit*> const&) const [12]
                0.00    0.00  288343/288343      bool __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>::operator()<std::_List_iterator<Rabbit*> >(std::_List_iterator<Rabbit*>) [84]
-----------------------------------------------
                0.00    0.00  288343/288343      bool __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>::operator()<std::_List_iterator<Rabbit*> >(std::_List_iterator<Rabbit*>) [84]
[97]     0.0    0.00    0.00  288343         FemaleRabbit::grow()::{lambda(Rabbit*)#1}::operator()(Rabbit*) const [97]
                0.00    0.00  288343/19074565     Rabbit::hasMajority() const [23]
-----------------------------------------------
                0.00    0.00   82508/82508       std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() [14]
[98]     0.0    0.00    0.00   82508         std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::_M_gen_rand() [98]
-----------------------------------------------
                0.00    0.00     624/624         unsigned long std::__detail::__mod<unsigned long, 4294967296ul, 1ul, 0ul>(unsigned long) [100]
[99]     0.0    0.00    0.00     624         std::__detail::_Mod<unsigned long, 4294967296ul, 1ul, 0ul, true, true>::__calc(unsigned long) [99]
-----------------------------------------------
                0.00    0.00     624/624         std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::seed(unsigned long) [144]
[100]    0.0    0.00    0.00     624         unsigned long std::__detail::__mod<unsigned long, 4294967296ul, 1ul, 0ul>(unsigned long) [100]
                0.00    0.00     624/624         std::__detail::_Mod<unsigned long, 4294967296ul, 1ul, 0ul, true, true>::__calc(unsigned long) [99]
-----------------------------------------------
                0.00    0.00     623/623         unsigned long std::__detail::__mod<unsigned long, 624ul, 1ul, 0ul>(unsigned long) [102]
[101]    0.0    0.00    0.00     623         std::__detail::_Mod<unsigned long, 624ul, 1ul, 0ul, true, true>::__calc(unsigned long) [101]
-----------------------------------------------
                0.00    0.00     623/623         std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::seed(unsigned long) [144]
[102]    0.0    0.00    0.00     623         unsigned long std::__detail::__mod<unsigned long, 624ul, 1ul, 0ul>(unsigned long) [102]
                0.00    0.00     623/623         std::__detail::_Mod<unsigned long, 624ul, 1ul, 0ul, true, true>::__calc(unsigned long) [101]
-----------------------------------------------
                0.00    0.00     403/403         std::_List_node<unsigned long>::_M_valptr() const [105]
[103]    0.0    0.00    0.00     403         __gnu_cxx::__aligned_membuf<unsigned long>::_M_ptr() const [103]
                0.00    0.00     403/403         __gnu_cxx::__aligned_membuf<unsigned long>::_M_addr() const [104]
-----------------------------------------------
                0.00    0.00     403/403         __gnu_cxx::__aligned_membuf<unsigned long>::_M_ptr() const [103]
[104]    0.0    0.00    0.00     403         __gnu_cxx::__aligned_membuf<unsigned long>::_M_addr() const [104]
-----------------------------------------------
                0.00    0.00     403/403         std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_node_count() const [106]
[105]    0.0    0.00    0.00     403         std::_List_node<unsigned long>::_M_valptr() const [105]
                0.00    0.00     403/403         __gnu_cxx::__aligned_membuf<unsigned long>::_M_ptr() const [103]
-----------------------------------------------
                0.00    0.00     403/403         std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::size() const [107]
[106]    0.0    0.00    0.00     403         std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_node_count() const [106]
                0.00    0.00     403/403         std::_List_node<unsigned long>::_M_valptr() const [105]
-----------------------------------------------
                0.00    0.00       1/403         Population::Population(unsigned int, unsigned int) [136]
                0.00    0.00     200/403         Population::passTime(unsigned int) [111]
                0.00    0.00     202/403         Population::getNumberOfRabbit() const [108]
[107]    0.0    0.00    0.00     403         std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::size() const [107]
                0.00    0.00     403/403         std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_node_count() const [106]
-----------------------------------------------
                0.00    0.00       2/202         operator<<(std::ostream&, Population const&) [127]
                0.00    0.00     200/202         main [6]
[108]    0.0    0.00    0.00     202         Population::getNumberOfRabbit() const [108]
                0.00    0.00     202/403         std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::size() const [107]
-----------------------------------------------
                0.00    0.00     200/200         std::array<int, 100ul>::operator[](unsigned long) [110]
[109]    0.0    0.00    0.00     200         std::__array_traits<int, 100ul>::_S_ref(int const (&) [100], unsigned long) [109]
-----------------------------------------------
                0.00    0.00     200/200         main [6]
[110]    0.0    0.00    0.00     200         std::array<int, 100ul>::operator[](unsigned long) [110]
                0.00    0.00     200/200         std::__array_traits<int, 100ul>::_S_ref(int const (&) [100], unsigned long) [109]
-----------------------------------------------
                0.00    0.00     100/100         main [6]
[111]    0.0    0.00    0.00     100         Population::passTime(unsigned int) [111]
                0.00    0.00     200/403         std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::size() const [107]
                0.00    0.00     200/4066799     std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::end() [39]
                0.00    0.00     200/288644      std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::begin() [82]
                0.00    0.00     100/100         Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1} std::for_each<std::_List_iterator<Rabbit*>, Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1}>(std::_List_iterator<Rabbit*>, Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1}, Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1}) [113]
                0.00    0.00     100/100         Population::passTime(unsigned int)::{lambda(Rabbit*&)#2} std::for_each<std::_List_iterator<Rabbit*>, Population::passTime(unsigned int)::{lambda(Rabbit*&)#2}>(std::_List_iterator<Rabbit*>, Population::passTime(unsigned int)::{lambda(Rabbit*&)#2}, Population::passTime(unsigned int)::{lambda(Rabbit*&)#2}) [114]
                0.00    0.00     100/100         std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::remove(Rabbit* const&) [112]
-----------------------------------------------
                0.00    0.00     100/100         Population::passTime(unsigned int) [111]
[112]    0.0    0.00    0.00     100         std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::remove(Rabbit* const&) [112]
                0.00    0.00 20994756/59560135     std::_List_iterator<Rabbit*>::operator*() const [11]
                0.00    0.00 18498079/57063659     std::_List_iterator<Rabbit*>::operator!=(std::_List_iterator<Rabbit*> const&) const [12]
                0.00    0.00 18497879/56774915     std::_List_iterator<Rabbit*>::operator++() [13]
                0.00    0.00 2496877/2496877     Rabbit** std::__addressof<Rabbit*>(Rabbit*&) [73]
                0.00    0.00 2496877/2496877     Rabbit* const* std::__addressof<Rabbit* const>(Rabbit* const&) [72]
                0.00    0.00 2496877/2496877     std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::_M_erase(std::_List_iterator<Rabbit*>) [71]
                0.00    0.00     100/288644      std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::begin() [82]
                0.00    0.00     100/4066799     std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::end() [39]
-----------------------------------------------
                0.00    0.00     100/100         Population::passTime(unsigned int) [111]
[113]    0.0    0.00    0.00     100         Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1} std::for_each<std::_List_iterator<Rabbit*>, Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1}>(std::_List_iterator<Rabbit*>, Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1}, Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1}) [113]
                0.00    0.00 18497979/57063659     std::_List_iterator<Rabbit*>::operator!=(std::_List_iterator<Rabbit*> const&) const [12]
                0.00    0.00 18497879/59560135     std::_List_iterator<Rabbit*>::operator*() const [11]
                0.00    0.00 18497879/18497879     Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1}::operator()(Rabbit* const&) const [26]
                0.00    0.00 18497879/56774915     std::_List_iterator<Rabbit*>::operator++() [13]
-----------------------------------------------
                0.00    0.00     100/100         Population::passTime(unsigned int) [111]
[114]    0.0    0.00    0.00     100         Population::passTime(unsigned int)::{lambda(Rabbit*&)#2} std::for_each<std::_List_iterator<Rabbit*>, Population::passTime(unsigned int)::{lambda(Rabbit*&)#2}>(std::_List_iterator<Rabbit*>, Population::passTime(unsigned int)::{lambda(Rabbit*&)#2}, Population::passTime(unsigned int)::{lambda(Rabbit*&)#2}) [114]
                0.00    0.00 18497979/57063659     std::_List_iterator<Rabbit*>::operator!=(std::_List_iterator<Rabbit*> const&) const [12]
                0.00    0.00 18497879/59560135     std::_List_iterator<Rabbit*>::operator*() const [11]
                0.00    0.00 18497879/18497879     Population::passTime(unsigned int)::{lambda(Rabbit*&)#2}::operator()(Rabbit*&) const [27]
                0.00    0.00 18497879/56774915     std::_List_iterator<Rabbit*>::operator++() [13]
-----------------------------------------------
                0.00    0.00       4/8           std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::begin() const [117]
                0.00    0.00       4/8           std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::end() const [116]
[115]    0.0    0.00    0.00       8         std::_List_const_iterator<Rabbit*>::_List_const_iterator(std::__detail::_List_node_base const*) [115]
-----------------------------------------------
                0.00    0.00       2/4           Population::getNumberOfFemaleRabbit() const [122]
                0.00    0.00       2/4           Population::getNumberOfMaleRabbit() const [121]
[116]    0.0    0.00    0.00       4         std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::end() const [116]
                0.00    0.00       4/8           std::_List_const_iterator<Rabbit*>::_List_const_iterator(std::__detail::_List_node_base const*) [115]
-----------------------------------------------
                0.00    0.00       2/4           Population::getNumberOfFemaleRabbit() const [122]
                0.00    0.00       2/4           Population::getNumberOfMaleRabbit() const [121]
[117]    0.0    0.00    0.00       4         std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::begin() const [117]
                0.00    0.00       4/8           std::_List_const_iterator<Rabbit*>::_List_const_iterator(std::__detail::_List_node_base const*) [115]
-----------------------------------------------
                0.00    0.00       3/3           std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [119]
[118]    0.0    0.00    0.00       3         std::uniform_int_distribution<int>::param_type::param_type(int, int) [118]
-----------------------------------------------
                0.00    0.00       3/3           __static_initialization_and_destruction_0(int, int) [134]
[119]    0.0    0.00    0.00       3         std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [119]
                0.00    0.00       3/3           std::uniform_int_distribution<int>::param_type::param_type(int, int) [118]
-----------------------------------------------
                0.00    0.00       2/2           operator<<(std::ostream&, Population const&) [127]
[120]    0.0    0.00    0.00       2         Population::getMeanDeathAge() const [120]
-----------------------------------------------
                0.00    0.00       2/2           operator<<(std::ostream&, Population const&) [127]
[121]    0.0    0.00    0.00       2         Population::getNumberOfMaleRabbit() const [121]
                0.00    0.00       2/4           std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::end() const [116]
                0.00    0.00       2/4           std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::begin() const [117]
                0.00    0.00       2/2           Population::getNumberOfMaleRabbit() const::{lambda(Rabbit*)#1} std::for_each<std::_List_const_iterator<Rabbit*>, Population::getNumberOfMaleRabbit() const::{lambda(Rabbit*)#1}>(std::_List_const_iterator<Rabbit*>, Population::getNumberOfMaleRabbit() const::{lambda(Rabbit*)#1}, Population::getNumberOfMaleRabbit() const::{lambda(Rabbit*)#1}) [125]
-----------------------------------------------
                0.00    0.00       2/2           operator<<(std::ostream&, Population const&) [127]
[122]    0.0    0.00    0.00       2         Population::getNumberOfFemaleRabbit() const [122]
                0.00    0.00       2/4           std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::end() const [116]
                0.00    0.00       2/4           std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::begin() const [117]
                0.00    0.00       2/2           Population::getNumberOfFemaleRabbit() const::{lambda(Rabbit*)#1} std::for_each<std::_List_const_iterator<Rabbit*>, Population::getNumberOfFemaleRabbit() const::{lambda(Rabbit*)#1}>(std::_List_const_iterator<Rabbit*>, Population::getNumberOfFemaleRabbit() const::{lambda(Rabbit*)#1}, Population::getNumberOfFemaleRabbit() const::{lambda(Rabbit*)#1}) [126]
-----------------------------------------------
                0.00    0.00       2/2           operator<<(std::ostream&, Population const&) [127]
[123]    0.0    0.00    0.00       2         Population::getBirth() const [123]
-----------------------------------------------
                0.00    0.00       2/2           operator<<(std::ostream&, Population const&) [127]
[124]    0.0    0.00    0.00       2         Population::getDeath() const [124]
-----------------------------------------------
                0.00    0.00       2/2           Population::getNumberOfMaleRabbit() const [121]
[125]    0.0    0.00    0.00       2         Population::getNumberOfMaleRabbit() const::{lambda(Rabbit*)#1} std::for_each<std::_List_const_iterator<Rabbit*>, Population::getNumberOfMaleRabbit() const::{lambda(Rabbit*)#1}>(std::_List_const_iterator<Rabbit*>, Population::getNumberOfMaleRabbit() const::{lambda(Rabbit*)#1}, Population::getNumberOfMaleRabbit() const::{lambda(Rabbit*)#1}) [125]
                0.00    0.00 1283280/2566560     std::_List_const_iterator<Rabbit*>::operator!=(std::_List_const_iterator<Rabbit*> const&) const [63]
                0.00    0.00 1283278/2566556     std::_List_const_iterator<Rabbit*>::operator*() const [67]
                0.00    0.00 1283278/2566556     std::_List_const_iterator<Rabbit*>::operator++() [68]
                0.00    0.00 1283278/1283278     Population::getNumberOfMaleRabbit() const::{lambda(Rabbit*)#1}::operator()(Rabbit*) const [78]
-----------------------------------------------
                0.00    0.00       2/2           Population::getNumberOfFemaleRabbit() const [122]
[126]    0.0    0.00    0.00       2         Population::getNumberOfFemaleRabbit() const::{lambda(Rabbit*)#1} std::for_each<std::_List_const_iterator<Rabbit*>, Population::getNumberOfFemaleRabbit() const::{lambda(Rabbit*)#1}>(std::_List_const_iterator<Rabbit*>, Population::getNumberOfFemaleRabbit() const::{lambda(Rabbit*)#1}, Population::getNumberOfFemaleRabbit() const::{lambda(Rabbit*)#1}) [126]
                0.00    0.00 1283280/2566560     std::_List_const_iterator<Rabbit*>::operator!=(std::_List_const_iterator<Rabbit*> const&) const [63]
                0.00    0.00 1283278/2566556     std::_List_const_iterator<Rabbit*>::operator*() const [67]
                0.00    0.00 1283278/2566556     std::_List_const_iterator<Rabbit*>::operator++() [68]
                0.00    0.00 1283278/1283278     Population::getNumberOfFemaleRabbit() const::{lambda(Rabbit*)#1}::operator()(Rabbit*) const [79]
-----------------------------------------------
                0.00    0.00       2/2           main [6]
[127]    0.0    0.00    0.00       2         operator<<(std::ostream&, Population const&) [127]
                0.00    0.00       2/2           Population::getNumberOfMaleRabbit() const [121]
                0.00    0.00       2/2           Population::getNumberOfFemaleRabbit() const [122]
                0.00    0.00       2/202         Population::getNumberOfRabbit() const [108]
                0.00    0.00       2/2           Population::getBirth() const [123]
                0.00    0.00       2/2           Population::getDeath() const [124]
                0.00    0.00       2/2           Population::getMeanDeathAge() const [120]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [174]
[128]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN10PopulationC2Ev [128]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [133]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [174]
[129]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN12FemaleRabbitC2ERNSt7__cxx114listIP6RabbitSaIS3_EEE [129]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [132]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [174]
[130]    0.0    0.00    0.00       1         _GLOBAL__sub_I_generator [130]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [134]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [174]
[131]    0.0    0.00    0.00       1         _GLOBAL__sub_I_main [131]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [135]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN12FemaleRabbitC2ERNSt7__cxx114listIP6RabbitSaIS3_EEE [129]
[132]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [132]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN10PopulationC2Ev [128]
[133]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [133]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_generator [130]
[134]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [134]
                0.00    0.00       3/3           std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [119]
                0.00    0.00       1/1           std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::mersenne_twister_engine(unsigned long) [145]
                0.00    0.00       1/1           std::uniform_real_distribution<double>::uniform_real_distribution(double, double) [147]
                0.00    0.00       1/1           std::normal_distribution<double>::normal_distribution(double, double) [143]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_main [131]
[135]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [135]
-----------------------------------------------
                0.00    0.00       1/1           main [6]
[136]    0.0    0.00    0.00       1         Population::Population(unsigned int, unsigned int) [136]
                0.00    0.00    2000/3778155     std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::push_back(Rabbit*&&) [59]
                0.00    0.00    1000/3778155     Rabbit::Rabbit() [40]
                0.00    0.00    1000/1889467     FemaleRabbit::FemaleRabbit(std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >&) [74]
                0.00    0.00       1/1           std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::list() [155]
                0.00    0.00       1/403         std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::size() const [107]
-----------------------------------------------
                0.00    0.00       1/1           main [6]
[137]    0.0    0.00    0.00       1         Population::~Population() [137]
                0.00    0.00       1/288644      std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::begin() [82]
                0.00    0.00       1/4066799     std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::end() [39]
                0.00    0.00       1/1           Population::~Population()::{lambda(Rabbit*&)#1} std::for_each<std::_List_iterator<Rabbit*>, Population::~Population()::{lambda(Rabbit*&)#1}>(std::_List_iterator<Rabbit*>, Population::~Population()::{lambda(Rabbit*&)#1}, Population::~Population()::{lambda(Rabbit*&)#1}) [157]
                0.00    0.00       1/1           std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::~list() [156]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<std::_List_node<Rabbit*> >::allocator() [140]
[138]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::_List_node<Rabbit*> >::new_allocator() [138]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<std::_List_node<Rabbit*> >::~allocator() [141]
[139]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::_List_node<Rabbit*> >::~new_allocator() [139]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_List_impl::_List_impl() [148]
[140]    0.0    0.00    0.00       1         std::allocator<std::_List_node<Rabbit*> >::allocator() [140]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::_List_node<Rabbit*> >::new_allocator() [138]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_List_impl::~_List_impl() [149]
[141]    0.0    0.00    0.00       1         std::allocator<std::_List_node<Rabbit*> >::~allocator() [141]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::_List_node<Rabbit*> >::~new_allocator() [139]
-----------------------------------------------
                0.00    0.00       1/1           std::normal_distribution<double>::normal_distribution(double, double) [143]
[142]    0.0    0.00    0.00       1         std::normal_distribution<double>::param_type::param_type(double, double) [142]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [134]
[143]    0.0    0.00    0.00       1         std::normal_distribution<double>::normal_distribution(double, double) [143]
                0.00    0.00       1/1           std::normal_distribution<double>::param_type::param_type(double, double) [142]
-----------------------------------------------
                0.00    0.00       1/1           std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::mersenne_twister_engine(unsigned long) [145]
[144]    0.0    0.00    0.00       1         std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::seed(unsigned long) [144]
                0.00    0.00     624/624         unsigned long std::__detail::__mod<unsigned long, 4294967296ul, 1ul, 0ul>(unsigned long) [100]
                0.00    0.00     623/623         unsigned long std::__detail::__mod<unsigned long, 624ul, 1ul, 0ul>(unsigned long) [102]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [134]
[145]    0.0    0.00    0.00       1         std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::mersenne_twister_engine(unsigned long) [145]
                0.00    0.00       1/1           std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::seed(unsigned long) [144]
-----------------------------------------------
                0.00    0.00       1/1           std::uniform_real_distribution<double>::uniform_real_distribution(double, double) [147]
[146]    0.0    0.00    0.00       1         std::uniform_real_distribution<double>::param_type::param_type(double, double) [146]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [134]
[147]    0.0    0.00    0.00       1         std::uniform_real_distribution<double>::uniform_real_distribution(double, double) [147]
                0.00    0.00       1/1           std::uniform_real_distribution<double>::param_type::param_type(double, double) [146]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_List_base() [153]
[148]    0.0    0.00    0.00       1         std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_List_impl::_List_impl() [148]
                0.00    0.00       1/1           std::allocator<std::_List_node<Rabbit*> >::allocator() [140]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::~_List_base() [154]
[149]    0.0    0.00    0.00       1         std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_List_impl::~_List_impl() [149]
                0.00    0.00       1/1           std::allocator<std::_List_node<Rabbit*> >::~allocator() [141]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_init() [151]
[150]    0.0    0.00    0.00       1         std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_set_size(unsigned long) [150]
                0.00    0.00       1/6275033     std::_List_node<unsigned long>::_M_valptr() [34]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_List_base() [153]
[151]    0.0    0.00    0.00       1         std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_init() [151]
                0.00    0.00       1/1           std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_set_size(unsigned long) [150]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::~_List_base() [154]
[152]    0.0    0.00    0.00       1         std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_clear() [152]
                0.00    0.00 1281278/67116445     std::_List_node<Rabbit*>::_M_valptr() [10]
                0.00    0.00 1281278/7556310     std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_get_Node_allocator() [31]
                0.00    0.00 1281278/3778155     void std::allocator_traits<std::allocator<std::_List_node<Rabbit*> > >::destroy<Rabbit*>(std::allocator<std::_List_node<Rabbit*> >&, Rabbit**) [51]
                0.00    0.00 1281278/3778155     std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_put_node(std::_List_node<Rabbit*>*) [56]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::list() [155]
[153]    0.0    0.00    0.00       1         std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_List_base() [153]
                0.00    0.00       1/1           std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_List_impl::_List_impl() [148]
                0.00    0.00       1/1           std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_init() [151]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::~list() [156]
[154]    0.0    0.00    0.00       1         std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::~_List_base() [154]
                0.00    0.00       1/1           std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_clear() [152]
                0.00    0.00       1/1           std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_List_impl::~_List_impl() [149]
-----------------------------------------------
                0.00    0.00       1/1           Population::Population(unsigned int, unsigned int) [136]
[155]    0.0    0.00    0.00       1         std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::list() [155]
                0.00    0.00       1/1           std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_List_base() [153]
-----------------------------------------------
                0.00    0.00       1/1           Population::~Population() [137]
[156]    0.0    0.00    0.00       1         std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::~list() [156]
                0.00    0.00       1/1           std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::~_List_base() [154]
-----------------------------------------------
                0.00    0.00       1/1           Population::~Population() [137]
[157]    0.0    0.00    0.00       1         Population::~Population()::{lambda(Rabbit*&)#1} std::for_each<std::_List_iterator<Rabbit*>, Population::~Population()::{lambda(Rabbit*&)#1}>(std::_List_iterator<Rabbit*>, Population::~Population()::{lambda(Rabbit*&)#1}, Population::~Population()::{lambda(Rabbit*&)#1}) [157]
                0.00    0.00 1281279/57063659     std::_List_iterator<Rabbit*>::operator!=(std::_List_iterator<Rabbit*> const&) const [12]
                0.00    0.00 1281278/59560135     std::_List_iterator<Rabbit*>::operator*() const [11]
                0.00    0.00 1281278/1281278     Population::~Population()::{lambda(Rabbit*&)#1}::operator()(Rabbit*&) const [80]
                0.00    0.00 1281278/56774915     std::_List_iterator<Rabbit*>::operator++() [13]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2018 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

 [128] _GLOBAL__sub_I__ZN10PopulationC2Ev [12] std::_List_iterator<Rabbit*>::operator!=(std::_List_iterator<Rabbit*> const&) const [54] std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_get_node()
 [129] _GLOBAL__sub_I__ZN12FemaleRabbitC2ERNSt7__cxx114listIP6RabbitSaIS3_EEE [87] std::normal_distribution<double>::param_type::mean() const [55] std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_inc_size(unsigned long)
 [130] _GLOBAL__sub_I_generator [88] std::normal_distribution<double>::param_type::stddev() const [56] std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_put_node(std::_List_node<Rabbit*>*)
 [131] _GLOBAL__sub_I_main    [67] std::_List_const_iterator<Rabbit*>::operator*() const [150] std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_set_size(unsigned long)
 [132] __static_initialization_and_destruction_0(int, int) [63] std::_List_const_iterator<Rabbit*>::operator!=(std::_List_const_iterator<Rabbit*> const&) const [31] std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_get_Node_allocator()
 [133] __static_initialization_and_destruction_0(int, int) [29] std::uniform_int_distribution<int>::param_type::a() const [151] std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_init()
 [134] __static_initialization_and_destruction_0(int, int) [35] std::uniform_int_distribution<int>::param_type::b() const [152] std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_clear()
 [135] __static_initialization_and_destruction_0(int, int) [16] std::uniform_real_distribution<double>::param_type::a() const [153] std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_List_base()
 [111] Population::passTime(unsigned int) [20] std::uniform_real_distribution<double>::param_type::b() const [154] std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::~_List_base()
 [136] Population::Population(unsigned int, unsigned int) [106] std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_node_count() const [57] std::_List_node<Rabbit*>* std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::_M_create_node<Rabbit*>(Rabbit*&&)
 [137] Population::~Population() [116] std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::end() const [39] std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::end()
  [30] FemaleRabbit::grow()  [107] std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::size() const [82] std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::begin()
  [74] FemaleRabbit::FemaleRabbit(std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >&) [117] std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::begin() const [112] std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::remove(Rabbit* const&)
  [75] FemaleRabbit::~FemaleRabbit() [140] std::allocator<std::_List_node<Rabbit*> >::allocator() [71] std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::_M_erase(std::_List_iterator<Rabbit*>)
  [76] FemaleRabbit::~FemaleRabbit() [141] std::allocator<std::_List_node<Rabbit*> >::~allocator() [58] void std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::_M_insert<Rabbit*>(std::_List_iterator<Rabbit*>, Rabbit*&&)
  [24] Rabbit::grow()         [10] std::_List_node<Rabbit*>::_M_valptr() [59] std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::push_back(Rabbit*&&)
  [40] Rabbit::Rabbit()       [34] std::_List_node<unsigned long>::_M_valptr() [155] std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::list()
  [77] Rabbit::~Rabbit()      [38] std::_List_iterator<Rabbit*>::_List_iterator(std::__detail::_List_node_base*) [156] std::__cxx11::list<Rabbit*, std::allocator<Rabbit*> >::~list()
  [41] Rabbit::~Rabbit()      [13] std::_List_iterator<Rabbit*>::operator++() [99] std::__detail::_Mod<unsigned long, 4294967296ul, 1ul, 0ul, true, true>::__calc(unsigned long)
  [42] __gnu_cxx::new_allocator<std::_List_node<Rabbit*> >::deallocate(std::_List_node<Rabbit*>*, unsigned long) [109] std::__array_traits<int, 100ul>::_S_ref(int const (&) [100], unsigned long) [101] std::__detail::_Mod<unsigned long, 624ul, 1ul, 0ul, true, true>::__calc(unsigned long)
  [43] void __gnu_cxx::new_allocator<std::_List_node<Rabbit*> >::destroy<Rabbit*>(Rabbit**) [47] std::__allocated_ptr<std::allocator<std::_List_node<Rabbit*> > >::__allocated_ptr(std::allocator<std::_List_node<Rabbit*> >&, std::_List_node<Rabbit*>*) [100] unsigned long std::__detail::__mod<unsigned long, 4294967296ul, 1ul, 0ul>(unsigned long)
  [44] __gnu_cxx::new_allocator<std::_List_node<Rabbit*> >::allocate(unsigned long, void const*) [48] std::__allocated_ptr<std::allocator<std::_List_node<Rabbit*> > >::~__allocated_ptr() [102] unsigned long std::__detail::__mod<unsigned long, 624ul, 1ul, 0ul>(unsigned long)
  [45] void __gnu_cxx::new_allocator<std::_List_node<Rabbit*> >::construct<Rabbit*, Rabbit*>(Rabbit**, Rabbit*&&) [49] std::__allocated_ptr<std::allocator<std::_List_node<Rabbit*> > >::operator=(decltype(nullptr)) [19] std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::_Adaptor(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)
 [138] __gnu_cxx::new_allocator<std::_List_node<Rabbit*> >::new_allocator() [50] std::allocator_traits<std::allocator<std::_List_node<Rabbit*> > >::deallocate(std::allocator<std::_List_node<Rabbit*> >&, std::_List_node<Rabbit*>*, unsigned long) [17] std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::operator()()
 [139] __gnu_cxx::new_allocator<std::_List_node<Rabbit*> >::~new_allocator() [51] void std::allocator_traits<std::allocator<std::_List_node<Rabbit*> > >::destroy<Rabbit*>(std::allocator<std::_List_node<Rabbit*> >&, Rabbit**) [72] Rabbit* const* std::__addressof<Rabbit* const>(Rabbit* const&)
   [8] __gnu_cxx::__aligned_membuf<Rabbit*>::_M_ptr() [52] std::allocator_traits<std::allocator<std::_List_node<Rabbit*> > >::allocate(std::allocator<std::_List_node<Rabbit*> >&, unsigned long) [73] Rabbit** std::__addressof<Rabbit*>(Rabbit*&)
   [9] __gnu_cxx::__aligned_membuf<Rabbit*>::_M_addr() [53] void std::allocator_traits<std::allocator<std::_List_node<Rabbit*> > >::construct<Rabbit*, Rabbit*>(std::allocator<std::_List_node<Rabbit*> >&, Rabbit**, Rabbit*&&) [60] std::allocator<std::_List_node<Rabbit*> >* std::__addressof<std::allocator<std::_List_node<Rabbit*> > >(std::allocator<std::_List_node<Rabbit*> >&)
  [32] __gnu_cxx::__aligned_membuf<unsigned long>::_M_ptr() [142] std::normal_distribution<double>::param_type::param_type(double, double) [18] double std::generate_canonical<double, 53ul, std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)
  [33] __gnu_cxx::__aligned_membuf<unsigned long>::_M_addr() [143] std::normal_distribution<double>::normal_distribution(double, double) [91] std::iterator_traits<std::_List_iterator<Rabbit*> >::iterator_category std::__iterator_category<std::_List_iterator<Rabbit*> >(std::_List_iterator<Rabbit*> const&)
  [83] __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>::_Iter_pred({lambda(Rabbit*)#1}) [89] double std::normal_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [61] std::remove_reference<Rabbit*&>::type&& std::move<Rabbit*&>(Rabbit*&)
  [84] bool __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>::operator()<std::_List_iterator<Rabbit*> >(std::_List_iterator<Rabbit*>) [90] double std::normal_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::normal_distribution<double>::param_type const&) [81] std::remove_reference<FemaleRabbit::grow()::{lambda(Rabbit*)#1}&>::type&& std::move<FemaleRabbit::grow()::{lambda(Rabbit*)#1}&>(std::remove_reference&&)
  [85] __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}> __gnu_cxx::__ops::__pred_iter<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>(__gnu_cxx::__ops::_Iter_pred) [115] std::_List_const_iterator<Rabbit*>::_List_const_iterator(std::__detail::_List_node_base const*) [92] bool std::any_of<std::_List_iterator<Rabbit*>, FemaleRabbit::grow()::{lambda(Rabbit*)#1}>(std::_List_iterator<Rabbit*>, FemaleRabbit::grow()::{lambda(Rabbit*)#1}, FemaleRabbit::grow()::{lambda(Rabbit*)#1})
 [120] Population::getMeanDeathAge() const [68] std::_List_const_iterator<Rabbit*>::operator++() [93] std::_List_iterator<Rabbit*> std::find_if<std::_List_iterator<Rabbit*>, FemaleRabbit::grow()::{lambda(Rabbit*)#1}>(FemaleRabbit::grow()::{lambda(Rabbit*)#1}, FemaleRabbit::grow()::{lambda(Rabbit*)#1}, FemaleRabbit::grow()::{lambda(Rabbit*)#1})
 [108] Population::getNumberOfRabbit() const [98] std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::_M_gen_rand() [28] Rabbit*&& std::forward<Rabbit*>(std::remove_reference<Rabbit*>::type&)
 [121] Population::getNumberOfMaleRabbit() const [15] std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::min() [94] bool std::none_of<std::_List_iterator<Rabbit*>, FemaleRabbit::grow()::{lambda(Rabbit*)#1}>(std::_List_iterator<Rabbit*>, FemaleRabbit::grow()::{lambda(Rabbit*)#1}, FemaleRabbit::grow()::{lambda(Rabbit*)#1})
 [122] Population::getNumberOfFemaleRabbit() const [144] std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::seed(unsigned long) [113] Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1} std::for_each<std::_List_iterator<Rabbit*>, Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1}>(std::_List_iterator<Rabbit*>, Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1}, Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1})
 [123] Population::getBirth() const [145] std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::mersenne_twister_engine(unsigned long) [114] Population::passTime(unsigned int)::{lambda(Rabbit*&)#2} std::for_each<std::_List_iterator<Rabbit*>, Population::passTime(unsigned int)::{lambda(Rabbit*&)#2}>(std::_List_iterator<Rabbit*>, Population::passTime(unsigned int)::{lambda(Rabbit*&)#2}, Population::passTime(unsigned int)::{lambda(Rabbit*&)#2})
 [124] Population::getDeath() const [14] std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() [157] Population::~Population()::{lambda(Rabbit*&)#1} std::for_each<std::_List_iterator<Rabbit*>, Population::~Population()::{lambda(Rabbit*&)#1}>(std::_List_iterator<Rabbit*>, Population::~Population()::{lambda(Rabbit*&)#1}, Population::~Population()::{lambda(Rabbit*&)#1})
  [23] Rabbit::hasMajority() const [118] std::uniform_int_distribution<int>::param_type::param_type(int, int) [125] Population::getNumberOfMaleRabbit() const::{lambda(Rabbit*)#1} std::for_each<std::_List_const_iterator<Rabbit*>, Population::getNumberOfMaleRabbit() const::{lambda(Rabbit*)#1}>(std::_List_const_iterator<Rabbit*>, Population::getNumberOfMaleRabbit() const::{lambda(Rabbit*)#1}, Population::getNumberOfMaleRabbit() const::{lambda(Rabbit*)#1})
  [69] Rabbit::getAge() const [119] std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [126] Population::getNumberOfFemaleRabbit() const::{lambda(Rabbit*)#1} std::for_each<std::_List_const_iterator<Rabbit*>, Population::getNumberOfFemaleRabbit() const::{lambda(Rabbit*)#1}>(std::_List_const_iterator<Rabbit*>, Population::getNumberOfFemaleRabbit() const::{lambda(Rabbit*)#1}, Population::getNumberOfFemaleRabbit() const::{lambda(Rabbit*)#1})
  [25] Rabbit::hasToDie() const [36] int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [95] std::_List_iterator<Rabbit*> std::__find_if<std::_List_iterator<Rabbit*>, __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}> >(__gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>, __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>, __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>)
  [46] __gnu_cxx::new_allocator<std::_List_node<Rabbit*> >::max_size() const [37] int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<int>::param_type const&) [96] std::_List_iterator<Rabbit*> std::__find_if<std::_List_iterator<Rabbit*>, __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}> >(__gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>, __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>, __gnu_cxx::__ops::_Iter_pred<FemaleRabbit::grow()::{lambda(Rabbit*)#1}>, std::input_iterator_tag)
  [64] __gnu_cxx::__aligned_membuf<Rabbit*>::_M_ptr() const [146] std::uniform_real_distribution<double>::param_type::param_type(double, double) [26] Population::passTime(unsigned int)::{lambda(Rabbit* const&)#1}::operator()(Rabbit* const&) const
  [65] __gnu_cxx::__aligned_membuf<Rabbit*>::_M_addr() const [147] std::uniform_real_distribution<double>::uniform_real_distribution(double, double) [27] Population::passTime(unsigned int)::{lambda(Rabbit*&)#2}::operator()(Rabbit*&) const
 [103] __gnu_cxx::__aligned_membuf<unsigned long>::_M_ptr() const [21] double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [80] Population::~Population()::{lambda(Rabbit*&)#1}::operator()(Rabbit*&) const
 [104] __gnu_cxx::__aligned_membuf<unsigned long>::_M_addr() const [22] double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_real_distribution<double>::param_type const&) [97] FemaleRabbit::grow()::{lambda(Rabbit*)#1}::operator()(Rabbit*) const
  [66] std::_List_node<Rabbit*>::_M_valptr() const [110] std::array<int, 100ul>::operator[](unsigned long) [78] Population::getNumberOfMaleRabbit() const::{lambda(Rabbit*)#1}::operator()(Rabbit*) const
 [105] std::_List_node<unsigned long>::_M_valptr() const [148] std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_List_impl::_List_impl() [79] Population::getNumberOfFemaleRabbit() const::{lambda(Rabbit*)#1}::operator()(Rabbit*) const
  [11] std::_List_iterator<Rabbit*>::operator*() const [149] std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_List_impl::~_List_impl() [127] operator<<(std::ostream&, Population const&)
  [86] std::_List_iterator<Rabbit*>::operator==(std::_List_iterator<Rabbit*> const&) const [70] std::__cxx11::_List_base<Rabbit*, std::allocator<Rabbit*> >::_M_dec_size(unsigned long) [62] operator new(unsigned long, void*)
